%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 898.000000 387.000000
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 898 387
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 898 387
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /O put
dup 34 /w put
dup 35 /space put
dup 36 /equal put
dup 37 /one put
dup 38 /zero put
dup 39 /H put
dup 40 /six put
dup 41 /l put
dup 42 /e put
dup 43 /f put
dup 44 /t put
dup 45 /eight put
dup 46 /r put
dup 47 /i put
dup 48 /g put
dup 49 /h put
dup 50 /two put
dup 51 /M put
dup 52 /o put
dup 53 /d put
dup 54 /fi put
dup 55 /A put
dup 56 /m put
dup 57 /three put
dup 58 /D put
dup 59 /c put
dup 60 /I put
dup 61 /p put
dup 62 /n put
dup 63 /a put
dup 64 /parenleft put
dup 65 /parenright put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<






311311331133352335343633321617352E012322061D01231563556464221F0B1A0B0C1F0C46495701BAFE4601BA4B48221803044A0404413F4D4B0000020024FF2F01FE02110028003C00BDBA002E000C00032BB8002E10BA0001000200032BB8000110B8000210B80038D0B800382FBA000400020038111239B8000210B80015D0411B0006002E0016002E0026002E0036002E0046002E0056002E0066002E0076002E0086002E0096002E00A6002E00B6002E00C6002E000D5D410500D5002E00E5002E00025DBA0021000C002E111239B800212FB80020DCB8000110B8003EDC00BA001B002600032BB8001B10BA0007003300032BB8000710BA0029001100032BB8002910303125112315232E0123220E0215141E02333236373315140E0223222E0227231E0333323627222E0235343E0233321E0215140E0201FE5001175231435C38181D3A563A3259160211263A2A152E271B015502283D4B247C74EE2A38220E11253A292838231011243B2C01D94A2B2B334F612E355F472A2D30222B48331D091420172A3A24107E98233946232544341F20354222244839230000010040000001EC02CA001A0051BA001A000000032BB8001A10BA000E000B00032BB8000E10B8001A10B80002D0B8001A10B80018D0B800182F00B800002FB800012FB8000C2FBA0013000800032BB8001310BA001900010000111239303113113311343E0233321615113311342E0223220E02072311405513263927313855112A443317312D240A0202CAFD360124233B2C183830FEA201542A45321C0A1521180111000200450000009A02CA00030007002FBA0001000200032BB8000110B8000210B80004D0B8000110B80006D000B800052FBA0001000000032BB800011030311335231D011133119A5555026268685DFDFB020500000100450000009A02CA00030017BA0003000000032BB800031000B800012FB800002F303113113311455502CAFD3602CA00000000010040000003150211002A00B7BA0003000000032BB8000310B8000DDC4103005F000D00015D4103008F000D00015D41030020000D00015D410300B0000D00015DB80010DCB80018DC4103008F001800015D4103005F001800015D41030020001800015D410300B0001800015DB8001BDCBA0023000D0010111239B8000310B80028D0B800282FBA002900000003111239B8001B10B8002CDC00B800012FB8000E2FB800192FBA0026000800032BB8002610B8000810B80013D0B8002610B80020D0303113113311343E0233321E0215113311343633321E0215113311342E02232206072E01232207233540550F2135251D25160955483F1F27160855192D3F2733551A104E306D3A020205FDFB01420F2D2A1E111F2A19FEAD01423C48121F2A18FEAD017B283924112E2A3028584C000000


00>] def
/CharStrings 35 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/zero 4 def
/one 5 def
/two 6 def
/three 7 def
/six 8 def
/eight 9 def
/equal 10 def
/A 11 def
/D 12 def
/H 13 def
/I 14 def
/M 15 def
/O 16 def
/a 17 def
/c 18 def
/d 19 def
/e 20 def
/f 21 def
/g 22 def
/h 23 def
/i 24 def
/l 25 def
/m 26 def
/n 27 def
/o 28 def
/p 29 def
/r 30 def
/t 31 def
/w 32 def
/fi 33 def
/uni2B91 34 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4151493 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C93142184C9D9AF35B09B9B2CFE320E80E6018C5839BB77E6DFC734C68F04E32204ECD50C076125AD301E3AE64DEB7F094723D25C1780CE8027A950E3CCA7F001CECDABE8253D8557773A892F730B9890F9C876753CFCFCA9B2F42F6D2194163BE52F3B1461CFEE994725A4013539A6CFEE36B6062B069096932110A7D9B7416BA22FDF439F2F9359BD5C7AA187BB0B06910620B9FA20875E02A7AD879F32097A101A60312A3EA62AF2DF6AA5A0CB467092632B48FD11D20AF861A65D8666ECD5ECBD918F43545681C57B2136FE149BF9507DEA93BA8D8E1F2A8E088730891893C9B4DD4AE93BCC83819F43297505964338EACF8E832202038C0E1DE1C1BD37D14F39ABABCCF8283750DE7AA7EB5CB3519FA10D8C54016BB5E7785A4868CB37E7A228F1F18F5323213EAF45C41C03D6599DD0CD6582001D0D8DD5186CA3657C28932E4C15FCD6E82F6A03A9BD9CBC776C463B593EE264C89A021778100142716E2A3C0ACCABB3D658EE29DE89B949F43C68D0C75B9D5A80938B44961D92B393BFC563D21667A5F2B19D87DA82BF8893F0EEE6C9B2CC9733D5159E61BD0C152F496B685B2A42C4810E97BBC8908367062D4852842F3A410F3B68ED8E2FE531233018B236A79DAFB51AAD8FEA079FF4561638F89B38DDCD9A94ED3DDB10B86449B8302636738FD0188FB1BDEAAA3B25C243129DFA65C0243E4AB01A8B3E95D25D78F435E6124228688D33E02FA82A7F7A7C632F31E45B1F11411A6153E50F698C76D4
CB7DE1AB078CBF0B39AAD5DA10405416BE9B5C5587DF32C02E25E9BCEE60CF0249BA8AF45103860286806C54F3372E3123EA0797EC3B7B6B9E3A5548D60A39595486055AFF787F9379B8A149241F0A6D8A5E54C601077A9110B53A1798E928959C39FB8162F0AC7B6945F5245AB66C7A5BE5177A6F4C3071915528DF3E0C540ECCD8D9D98C7AEE413BE884FE6F40727EC82886245E17B2AAEC7251921D91335D4D704CE07C27A18BF32792866698B9EBBCF6D554B30A5AE4826DBD5E599AF0B693302ED099507715AC478E668DBB0FF0008CA1CC521CBF2C0B88B33167C2BB7A8FB9CB7EE7D028698B8847EBE18F6D510D0978A8078276BDF3F08E9699DD2204CE134F61280231F036DF5AB570DB865D5D25591D434DBD76AB3BEA4A561B43C9F3E69119B8AD69AD47414D357E1A065B81BD4CF2BEBD95D6F787CFBA2220A73C56BB5FC437BF9954386B161D4E58583732CA47A647C6DD8D0206FABE2897BEE916630D27C6C9FF819F24F7049654EB799D4D57AA8AB5A7D716F035B56510285F6B9A7B0A419F7A6FD5E507164CC1E51ED3A201D5D6A0033E6F00284EB2D16F97C54F77EC17D2D5354ACAC86C9C818EC9E27386251C59DF1018E3F257576A51E62EAD42E234FF7AF09816224E6357EA82CA93AA299381C25DAD923C3FFF7FA801B84B0384D8EE590541BCFD5C31EDAAF6DF0CAF564BA8553BEEDDCBBAEBA3BD612B83520289B595271C5522227234D88196982DBE59B7CC3F7DBB4AB1AD094BF04C76CE555C40C471898B6B90D277E15A2400BC7A6719C8B5D97059912A9A797B77E13E7974432752B554C503FAB16BC4B9160DB1DD018F4F4FE8B4333BF0F5F9C8D268000193781840CDAB26C0279BC3826EFBF448B19D24995AC9CCD2E7833F3A049E0394B0570B56D90290F5807C92162333F6BE82B4ED712F130F5F18A831E1E5FD8AAFF4BDC586DA1A92799739FA4FF0802C2B244C529195B9D2A5423673DB450C9F23175566C797F834869740E88AC6DD87B3BFD54088D962793D7DC92BB83DAC7864E9F6AF6D06D11E5E2A8ED0A9E4794FCC7079C17606A1101F54A94615A16CB2CD26007A6D44F3C335CB9DDA2167B775FEF38747EE70441AA62D20100363023A34E3181E2E06028DA6B199855199CD52754C2CA2BAB902681E1A051F00C14732E178B6C006BF55C3EC1749A9646520276744351F6E0D24A77DF69311FA46FD0BC0B3747C30D4EBB60118664C47AAC130C8799D4701E9FCEBFBEE018AA8B2E21AB5ABFF3C94832BD2BACD58A23CCFA7DFF8BB2E14785ACB25ECB1FADBFCD84A673D02229C499E28B26FB0158CC0F413D0F00A0BC4AD3F646FA6651206F8C20028CAE64ED6E7030526705C5BBCAAE48A77C843F101CDEA8AE599A3CF29847234A2B55E2760CF7CD71E64AADB9B5FE38CD2E5C9971A0FFD68CEDFFDE92D
ED6DA466DC103B01C4B01CD0E7826FB66969F28C64BBCBE80C0F2CDE65F8F2EE0CB948CB9677CCA1DAC8730A7156F2A18B6945B1161B9FF0A3EB684DEEBD1D1E56ED1591FE3942A46952D75BD06C7A69FDA466526140EDC4A784E6450E209CCE57F7A9E19AA893965E6AD981F452E312D36687FD36937F37943E80013DF4E812085F604ED9B02A5A3813BF82DDFD80E7867F160DDEEE9DE0C76E9F6457A5DC8671E125654DCFE4C81019332BEC111ADD13E030AAB16714C579662FE61506477BFFC6C3CF883A7AC34E595DF9513498E757D19904D9BB8E09CDC0B38CADDACF7C8A97247131FD3EE3B182CB0A0E3BDDD4ED3916EAF3201DB03CC3DE789DB387B4C67880BCEC4558C69493A3D9C01B0DEA24D2D31B2DBC9862C0ABE39F3AAD1CA736884A7D8DDD1FB8AED5F9EFEFDD71422294B1A9513D9C577515B878CB4B4E7A3DB5EE9892791F92F41DEFF7E791D7FF40BAECE96DCD0769CA81857798074B1B024806E25FC36957FE3D316143B47FA48D901F31B1E5B504E6911D011CCEC5C78DD7CCE1561DDA47C6EC6E0C7CCD3FA4946531198D57C1566A935154FC59DA5710772D31D50F11F602C5ACEB90015878AE9534574648A1AE561897A8A51347AAA04A89C970C63247F3952A6194578EA1D439BAC6D0C8835C24E6B4880D75FFEEA3930C448DDA3F3B440E8A7439BFEBBB9618E23C176773478E42609A9D58BE6A0D7CAE4E8992E84FAF2DE5E578FB964C9D21D0A25B61CC5BE547657C879EB0E41D6377A7ECC72DD201BE7F3C4038747FA8D1EF92C835B295191296AD48A1BE28CBAC3E052DED6FC1555810100D904503DD011164248BEE6B71CE7724EDD875E62117A70BC7161638D138B055F5996B86070FB3CD640404AD6BAA96493B9FC7D2A3117D80089D91F630AB940A14072C4AE450BE4BF00086CEFAB751D35B17D1AC0FA11F912A0174D436F8664B29B62848705823CF8058CE46062F4B98B58D707E08018295BDBD403993C1DE15F926AD2D863E75D8B03B68A2B9C53AC49E7667AF6FF4FA0875176FBF6C7DEE65EFA23938FA91A8CC649E0F9FB33F3485F6A328E3AD317CB67B2345B5783DAEC9F3836469A8DF4BD7609592C457DFCD4CB563F142EDEF3532407FAECF8C4884C431F9F7516F2477378C09DAD659B1CF7B9E405A62F2CE0054940E2565DC9F024C5EF49837B52CAB47975BE445AE799995CF464AB0954DFAF4669DB1B1164EDB1889D233E6E51FB9043F7B9A98BCDB95B70250EE16AD96396C76E9DC9B2C4EC0127DF21CDDCE2E73A9C227C7919C049220F243D39084BEC803B336A1764BED53FBCE81E72B7309E24144A6AA1DA25B17D1B24603283D9C785DA71A75D2FF28535E900D653E0DBB866636A4E4CBFDF454AD34D68AFDEB281B377D4CC65EB43BEB26367F9C3671482EF8753F90B95A69350B19DDC942
356DFE0777C83861140612E64770D0981C3C20FBDC5C2BA0B322D7D70F19F290C1078D40F256DA11ED63DFF69506A7F09A047ADC71328CEC4095AFE71490219CE1F72B784F94A36E826993F7F21DB48606B77B919E8C843C28277AE20D5A9082A47B4F3515E67F3993F8D3763F745731845064990984A775088A658713ADF123B6DA65D1676287B376F2D96F8D7B9A2D4F20FD970A358558652549E00F17E9D327FBD3071171ED3DEFBFC15F44CEB4C08AF8A1375AF74E1E5F807B91E7FCB49D7358B335888B100B3BD6E15C37F2E208B78B4E227A0EFF05B819C17E9DB295C3E7C43CC60C2646823E52766BED775DF4C4DE0F81C0C794B201ACC2016F04788D2450865D97604668C3A3FCF42F3ABEC1A9DDCD196325E6E7A08DDCDFDA982C6876BC4CE03E5B1573F220C0B2EC231331D0F5B409663243F79D87B2BA013CD5D623258C0F15DA7F9627C9E4E4DA9C62839A4C83845FA855177A03100B5A24C7C8F373EBA7055AFF2D9FBF40BDBF6851C73154E7123A72431D8FA9E1F325C5D63DE20C99B47B36C755082F5F5400EE343D90609C5C6A847D736AFDE82A0126C8DF5E850C04C0E91B18417689FFEB7422D6B0C49F4863CA51DE7529F86250541AAABFD29F75429F94E49897F4F151305618F7FD59A9BF74642686D2244B2E2EF78ECC9322D801E5CC4E3E89F2DBB0057BBF2803CBE08D7C5B552C474149EE09797CC526615736AE23EE6102F7653059CB63FDB298BE1F756003D74869675A0FE0E11A7D5DD149CF8B474A39455D1F5E01A2CEEA8EE85A1211A3E76F8EF2D7F118064D6E2E7BFC1276FF78E4293B8188110ADF151F4DF89F44DE4CF1820A8815D1D16219ED57D311799CA1F752F4C60923A11EE07801F3794E8C006649E853AF2A46757C70ABD08599255F5C2B61D69D852918956938A86376D9D27CCDCD3CFB173E723EB046C5EFE899EE27DAC3ED9181981C4C5CA7540AADA28F25D994AC40742609B76413A0D8DCC6826E59EC27F5AD0E35932D215FB39BEFA039826EBBA6F2AEE5DCFBE2E4A2FA514E5ACDBAFA607B1793BB04969416CB3F97580041D3BB32EEA61B7E89DD6D746F94B821FE2CDCF8DBB70EFDC3476985EC8410EC6EE5848342C5847A150577705B74248EDF7EC362C0D5D9DB1948230CB925CCDAEEB7D7B158266E4F850369E1141E7F398EDEBFE0989F78EA94EC9DDFCC2DC1F7997D208DC3C4F558BF00CE1628585A0F566FFBEE892B0A191E695C6AF1FB411AE5C626D0034E562DF243C33F2EA855C93C68EA8F6B810C932084DA99E3CE99D12FED98779CD9D508A426CD5244048FFA2BA13D80FE045466D9E06F0602ED31E98A11A0502645887A8464302F4099E35F0DDF5A597D20F5AD9CC708EB02144A4BD7BB7C09AE6E6B64A032D45D023617B51A1817BA2A2B9410AD8EFD10653EF8EC26C33FE9AD


5A80E71276AEB9B6ECAAC1D28CF12BEF258F28EE43FA32F795F492E0DA300C7F1713D407C7F6EBF21A0AB6DA864D1EAC7BE3B5F18407C04FD909B5796E4175395BA3EBB3000D0D6BF4E0D770EA542CAD0DF40F673522A7D4935319F81E2442E9662255D65081B083495B9189569B661892F2A5DD868F08FBC8A2AC59FAEDBB0B0964F0CA602282A4666CBB31F105D7146D37E94BF4406C825563D23EB709DAC25CB41120AD1FBDBA155B522EC48E2544F1B9AD6F29712E0643BCF8170992B281B085F2D354674F4A29659B7A15144F6ECD7CC44433DF20357D4E045C94DDB00D07B681505E0186055E6AF383CBDFD93DF15F416D406E91E704BA1951F4BE1440468D0A2D799F9E10E4132C684F135B43678A9B493EDBC448924499E5B71270E226809ECDACAD557F75F918EF0DAB3A2D0F8F67763B96FE5B4C8E1CB14C34E29FE0DFFA93530E5ABCCAC96A37ADC90EFDC0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: HelveticaNeue-Italic
%!FontType1-1.0: HelveticaNeue-Italic 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue-Italic def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /n put
dup 34 /comma put
dup 35 /space put
dup 36 /c put
dup 37 /six put
dup 38 /one put
dup 39 /zero put
dup 40 /eight put
dup 41 /two put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -993 1 index div -481 2 index div 1511 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<




00>] def
/CharStrings 11 dict dup begin
/.notdef 0 def
/space 1 def
/comma 2 def
/zero 3 def
/one 4 def
/two 5 def
/six 6 def
/eight 7 def
/c 8 def
/n 9 def
/u20BC 10 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-993 -481 1511 1077}def
/UniqueID 4287398 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91B5BF8E443649147905228038171EB73F3E0B647FF27DF9EB6CBB52D7BA427F252DF81FEB9E3AD677E2740C382AB48C21C03654FE91AB0D9C17024553E984C71341138E279C58A892AB114F337E174B8D0325813E525380E543A34E952F8F3139DAF57426FFFC500E134A20B450724C96204A39C958D2793929C8E208F4E83832A1CD043FA068C422D9C9CB47CF25E0925D4CCBA9E6311C5FDCE8AAB4721BF02BFA6CF4858C8A1CCA656E683CA5F1ABE4B2EB926F46B674D001460A84BEB2559A5EFBD34E3F923059543FE8A85CBAF55D97FCD34990CCA189DEE25208C477DDF85A0391185AACE51237D1656B19163D2C2296CEF05DBA8028CF8773286CFE3D851F81847F8030A08499D03ABE740B32963C2A5734B238C9441231065F97FD98DC9F3046AD2E2848565076B090CCEA4588EF08EA7276C876A28463DC1BD092204F12B5093A3B928E0567A516032A40613FEE5277F17A293ED6BBAB2C78BC93CC49EF01557ACA0B505780E0B988869538C90B67BD4AA8C4E20905374DA3C0AA0024514BEB8EC048C5FA471FB7421D21E812298C336469E04EF1DD2C8C518EB9AFF0FABBF021795C2198E3E72A8B8EBFBB12F3F2C497EA2FFB2B1F150F46B98A374F36E59C0480572DE403790E24F2D1BC2733B15B146651C846F52AA68FF384A049169B39A13AE876A2526B9710D9107AD8AE3147711026EA8CCDEA7D3D8DD96CBB70D9AAF5ADBEBC73FC56F14FE2119C11F2C4B7D12B1866C415D085EC77A9EFF7

C7C2387B6343E353F0A970026F28C628B676DC815829925C99147A9B285C7BA83014F06A62579457F3FE0177C22AE94278BB2B799BB3DCD26299111163016573E2199B88D0FF46FC77BEBB6E1F45982D2AD7585DCA5818BB590E133D10CDC80FD4213BAAF93B0C90A71A63E09E85AA1761F8EDB227CDBF74E633DC2FBC1DFEB98487245DFE5E0C10C9D0E86DF33B6E5E4AB9E5872DE46223612D5F0451892D337D998EC0B5E72C464D3F89733A4374F6DFD140A686DC426B8B91C95D1B9679B7C90A0B2408A81B44ABF66AC039D2104B1397A1BC1EA26A72432DA4ACED10B011BF0FF3F009C2B6BEA076979EE41F20DF41ACAEE4D754A82E7A6FA302F4168336BDA92DF0336C2E966F5A91710FE8D03504B8866C80C36F31A53EB97912F404CF831F46D2086C9ECA3926249F84880F451A664AAAB9F528D5AB9DFA01F832E50D155305F9771EE87768A515D0D2C44C8F8A733D199285565572C30B60DF34E0EBD7DBF3EB7FBCD7770A366EDF0A52AF1B8B8BE025FC1D629E727609E6BA1F17E1F1838D1D59FD837A43F42D18CACB9E008960755A9417E0EA42635DB67BBF05A02313ACA6AFE493FB5DABBFAF59813A8B5D391523B8EFC37546D62A4DDB718EC4E13102A548CF0EE5515B9CBB52AD0576D81935BCBF709BC08C5FADD9A2D255A3495055A41E8ACE2A744D1433626E1C5169DAD7B756822BC46E07887E883EB1F02E8D9C701756BE714956BD67271D91B4E016BCED53D9F2E0E5305224ECB05129B79230D7691C205F64C9EE49E04ED0BE415D501637AB4951
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Italic cguidfix
/F2.1/HelveticaNeue-Italic renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 898 387 rc
0 387 m
898 387 l
898 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-1420.1754 2037.3158 m
3528.0701 2037.3158 l
3528.0701 -1223.2106 l
-1420.1754 -1223.2106 l
h
-1420.1754 2037.3158 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 1649 1800 cm
-1436.5096 1486.9069 m
-1407.5096 1486.9069 l
-1407.5096 1516.9069 l
-1436.5096 1516.9069 l
h
-1436.5096 1486.9069 m
S
-1300.7565 1486.9069 m
-1271.7565 1486.9069 l
-1271.7565 1516.9069 l
-1300.7565 1516.9069 l
h
-1300.7565 1486.9069 m
S
-1402.5713 1486.9069 m
-1373.5713 1486.9069 l
-1373.5713 1516.9069 l
-1402.5713 1516.9069 l
h
-1402.5713 1486.9069 m
S
-1266.8182 1486.9069 m
-1237.8182 1486.9069 l
-1237.8182 1516.9069 l
-1266.8182 1516.9069 l
h
-1266.8182 1486.9069 m
S
-1368.6331 1486.9069 m
-1339.6331 1486.9069 l
-1339.6331 1516.9069 l
-1368.6331 1516.9069 l
h
-1368.6331 1486.9069 m
S
-1334.6948 1486.9069 m
-1305.6948 1486.9069 l
-1305.6948 1516.9069 l
-1334.6948 1516.9069 l
h
-1334.6948 1486.9069 m
S
-1436.5096 1520.7565 m
-1407.5096 1520.7565 l
-1407.5096 1550.7565 l
-1436.5096 1550.7565 l
h
-1436.5096 1520.7565 m
S
-1300.7565 1520.7565 m
-1271.7565 1520.7565 l
-1271.7565 1550.7565 l
-1300.7565 1550.7565 l
h
-1300.7565 1520.7565 m
S
-1402.5713 1520.7565 m
-1373.5713 1520.7565 l
-1373.5713 1550.7565 l
-1402.5713 1550.7565 l
h
-1402.5713 1520.7565 m
S
-1266.8182 1520.7565 m
-1237.8182 1520.7565 l
-1237.8182 1550.7565 l
-1266.8182 1550.7565 l
h
-1266.8182 1520.7565 m
S
-1368.6331 1520.7565 m
-1339.6331 1520.7565 l
-1339.6331 1550.7565 l
-1368.6331 1550.7565 l
h
-1368.6331 1520.7565 m
S
-1334.6948 1520.7565 m
-1305.6948 1520.7565 l
-1305.6948 1550.7565 l
-1334.6948 1550.7565 l
h
-1334.6948 1520.7565 m
S
-1436.5096 1554.6062 m
-1407.5096 1554.6062 l
-1407.5096 1584.6062 l
-1436.5096 1584.6062 l
h
-1436.5096 1554.6062 m
S
-1300.7565 1554.6062 m
-1271.7565 1554.6062 l
-1271.7565 1584.6062 l
-1300.7565 1584.6062 l
h
-1300.7565 1554.6062 m
S
-1402.5713 1554.6062 m
-1373.5713 1554.6062 l
-1373.5713 1584.6062 l
-1402.5713 1584.6062 l
h
-1402.5713 1554.6062 m
S
-1266.8182 1554.6062 m
-1237.8182 1554.6062 l
-1237.8182 1584.6062 l
-1266.8182 1584.6062 l
h
-1266.8182 1554.6062 m
S
-1368.6331 1554.6062 m
-1339.6331 1554.6062 l
-1339.6331 1584.6062 l
-1368.6331 1584.6062 l
h
-1368.6331 1554.6062 m
S
-1334.6948 1554.6062 m
-1305.6948 1554.6062 l
-1305.6948 1584.6062 l
-1334.6948 1584.6062 l
h
-1334.6948 1554.6062 m
S
-1436.5096 1588.4558 m
-1407.5096 1588.4558 l
-1407.5096 1618.4558 l
-1436.5096 1618.4558 l
h
-1436.5096 1588.4558 m
S
-1300.7565 1588.4558 m
-1271.7565 1588.4558 l
-1271.7565 1618.4558 l
-1300.7565 1618.4558 l
h
-1300.7565 1588.4558 m
S
-1402.5713 1588.4558 m
-1373.5713 1588.4558 l
-1373.5713 1618.4558 l
-1402.5713 1618.4558 l
h
-1402.5713 1588.4558 m
S
-1266.8182 1588.4558 m
-1237.8182 1588.4558 l
-1237.8182 1618.4558 l
-1266.8182 1618.4558 l
h
-1266.8182 1588.4558 m
S
-1368.6331 1588.4558 m
-1339.6331 1588.4558 l
-1339.6331 1618.4558 l
-1368.6331 1618.4558 l
h
-1368.6331 1588.4558 m
S
-1334.6948 1588.4558 m
-1305.6948 1588.4558 l
-1305.6948 1618.4558 l
-1334.6948 1618.4558 l
h
-1334.6948 1588.4558 m
S
0 i
0.83741802 0.83743781 0.83742714 sc
CM
212.4904 177.69449 m
241.4904 177.69449 l
241.4904 147.69449 l
212.4904 147.69449 l
h
212.4904 177.69449 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1649 1800 cm
-1436.5096 1622.3055 m
-1407.5096 1622.3055 l
-1407.5096 1652.3055 l
-1436.5096 1652.3055 l
h
-1436.5096 1622.3055 m
S
-1300.7565 1622.3055 m
-1271.7565 1622.3055 l
-1271.7565 1652.3055 l
-1300.7565 1652.3055 l
h
-1300.7565 1622.3055 m
S
0 i
0.83741802 0.83743781 0.83742714 sc
CM
246.42868 177.69449 m
275.42868 177.69449 l
275.42868 147.69449 l
246.42868 147.69449 l
h
246.42868 177.69449 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1649 1800 cm
-1402.5713 1622.3055 m
-1373.5713 1622.3055 l
-1373.5713 1652.3055 l
-1402.5713 1652.3055 l
h
-1402.5713 1622.3055 m
S
-1266.8182 1622.3055 m
-1237.8182 1622.3055 l
-1237.8182 1652.3055 l
-1266.8182 1652.3055 l
h
-1266.8182 1622.3055 m
S
0 i
0.83741802 0.83743781 0.83742714 sc
CM
280.36694 177.69449 m
309.36694 177.69449 l
309.36694 147.69449 l
280.36694 147.69449 l
h
280.36694 177.69449 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1649 1800 cm
-1368.6331 1622.3055 m
-1339.6331 1622.3055 l
-1339.6331 1652.3055 l
-1368.6331 1652.3055 l
h
-1368.6331 1622.3055 m
S
0 i
0.83741802 0.83743781 0.83742714 sc
CM
314.30521 177.69449 m
343.30521 177.69449 l
343.30521 147.69449 l
314.30521 147.69449 l
h
314.30521 177.69449 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1649 1800 cm
-1334.6948 1622.3055 m
-1305.6948 1622.3055 l
-1305.6948 1652.3055 l
-1334.6948 1652.3055 l
h
-1334.6948 1622.3055 m
S
0 i
0.83741802 0.83743781 0.83742714 sc
CM
212.4904 143.84483 m
241.4904 143.84483 l
241.4904 113.84483 l
212.4904 113.84483 l
h
212.4904 143.84483 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1649 1800 cm
-1436.5096 1656.1552 m
-1407.5096 1656.1552 l
-1407.5096 1686.1552 l
-1436.5096 1686.1552 l
h
-1436.5096 1656.1552 m
S
-1300.7565 1656.1552 m
-1271.7565 1656.1552 l
-1271.7565 1686.1552 l
-1300.7565 1686.1552 l
h
-1300.7565 1656.1552 m
S
0 i
0.83741802 0.83743781 0.83742714 sc
CM
246.42868 143.84483 m
275.42868 143.84483 l
275.42868 113.84483 l
246.42868 113.84483 l
h
246.42868 143.84483 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1649 1800 cm
-1402.5713 1656.1552 m
-1373.5713 1656.1552 l
-1373.5713 1686.1552 l
-1402.5713 1686.1552 l
h
-1402.5713 1656.1552 m
S
-1266.8182 1656.1552 m
-1237.8182 1656.1552 l
-1237.8182 1686.1552 l
-1266.8182 1686.1552 l
h
-1266.8182 1656.1552 m
S
0 i
0.83741802 0.83743781 0.83742714 sc
CM
280.36694 143.84483 m
309.36694 143.84483 l
309.36694 113.84483 l
280.36694 113.84483 l
h
280.36694 143.84483 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1649 1800 cm
-1368.6331 1656.1552 m
-1339.6331 1656.1552 l
-1339.6331 1686.1552 l
-1368.6331 1686.1552 l
h
-1368.6331 1656.1552 m
S
0 i
0.83741802 0.83743781 0.83742714 sc
CM
314.30521 143.84483 m
343.30521 143.84483 l
343.30521 113.84483 l
314.30521 113.84483 l
h
314.30521 143.84483 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1649 1800 cm
-1334.6948 1656.1552 m
-1305.6948 1656.1552 l
-1305.6948 1686.1552 l
-1334.6948 1686.1552 l
h
-1334.6948 1656.1552 m
S
0 i
CM
66.138466 116.09798 m
65.719101 116.09798 53.48737 115.10939 52.356739 141.48145 c
51.226006 167.85342 53.555721 207.36711 51.039246 211.37885 c
48.522583 215.39076 45.586658 214.38791 45.586658 214.38791 c
45.586658 214.38791 51.175915 215.30141 52.042931 208.4608 c
52.910053 201.62059 51.842659 154.83014 53.939697 135.77399 c
56.036945 116.71764 66.557953 116.09798 66.138466 116.09798 c
h
66.138466 116.09798 m
f
0.5 w
0.60000002 i
1 0 0 -1 1649 1800 cm
-1582.8616 1683.902 m
-1583.2809 1683.902 -1595.5126 1684.8906 -1596.6433 1658.5186 c
-1597.774 1632.1466 -1595.4443 1592.6329 -1597.9608 1588.6212 c
-1600.4774 1584.6093 -1603.4133 1585.6121 -1603.4133 1585.6121 c
-1603.4133 1585.6121 -1597.8241 1584.6986 -1596.957 1591.5392 c
-1596.09 1598.3794 -1597.1573 1645.1698 -1595.0603 1664.226 c
-1592.963 1683.2823 -1582.442 1683.902 -1582.8616 1683.902 c
h
-1582.8616 1683.902 m
S
0 i
CM
66.138466 313.08835 m
65.719101 313.08835 53.48737 314.07693 52.356739 287.70486 c
51.226006 261.33289 53.555721 221.8192 51.039246 217.80746 c
48.522583 213.79555 45.586658 214.7984 45.586658 214.7984 c
45.586658 214.7984 51.175915 213.8849 52.042931 220.72551 c
52.910053 227.56572 51.842659 274.35617 53.939697 293.41232 c
56.036945 312.46866 66.557953 313.08835 66.138466 313.08835 c
h
66.138466 313.08835 m
f
0.60000002 i
1 0 0 -1 1649 1800 cm
-1582.8616 1486.9116 m
-1583.2809 1486.9116 -1595.5126 1485.9231 -1596.6433 1512.2952 c
-1597.774 1538.6671 -1595.4443 1578.1808 -1597.9608 1582.1925 c
-1600.4774 1586.2045 -1603.4133 1585.2015 -1603.4133 1585.2015 c
-1603.4133 1585.2015 -1597.8241 1586.1151 -1596.957 1579.2745 c
-1596.09 1572.4343 -1597.1573 1525.6438 -1595.0603 1506.5876 c
-1592.963 1487.5314 -1582.442 1486.9116 -1582.8616 1486.9116 c
h
-1582.8616 1486.9116 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 18 0 0 -18 0 0]sf
-1436.5547 1436.3575 m
(!)s
/F1.1[ 13 0 0 -13 0 0]sf
-1422.8748 1442.3575 m
(")s
/F1.1[ 18 0 0 -18 0 0]sf
-1413.0208 1436.3575 m
(#$#%&)[ 5.004000 10.800000 5.004000 10.008000 0.000000 ] xS
/Cs2 SC
0 0 0 sc
CM
496.82007 325.59799 m
496.82007 326.01733 495.48129 338.24908 531.19507 339.3797 c
566.90869 340.51044 620.41919 338.18073 625.85199 340.6972 c
631.28503 343.21387 629.92694 346.14978 629.92694 346.14978 c
629.92694 346.14978 631.164 340.56055 621.90027 339.69351 c
612.63708 338.82639 549.27222 339.8938 523.46588 337.79675 c
497.65924 335.69949 496.82007 325.1785 496.82007 325.59799 c
h
496.82007 325.59799 m
f
0.60000002 i
1 0 0 -1 1649 1800 cm
-1152.1799 1474.402 m
-1152.1799 1473.9827 -1153.5187 1461.751 -1117.8049 1460.6202 c
-1082.0913 1459.4895 -1028.5808 1461.8193 -1023.148 1459.3029 c
-1017.715 1456.7861 -1019.0731 1453.8502 -1019.0731 1453.8502 c
-1019.0731 1453.8502 -1017.836 1459.4395 -1027.0997 1460.3065 c
-1036.3629 1461.1736 -1099.7278 1460.1062 -1125.5342 1462.2032 c
-1151.3408 1464.3005 -1152.1799 1474.8215 -1152.1799 1474.402 c
h
-1152.1799 1474.402 m
S
0 i
CM
763.58966 325.59799 m
763.58966 326.01733 764.92847 338.24908 729.21472 339.3797 c
693.5011 340.51044 639.99054 338.18073 634.5578 340.6972 c
629.12476 343.21387 630.48285 346.14978 630.48285 346.14978 c
630.48285 346.14978 629.24573 340.56055 638.50946 339.69351 c
647.77264 338.82639 711.13751 339.8938 736.94391 337.79675 c
762.75049 335.69949 763.58966 325.1785 763.58966 325.59799 c
h
763.58966 325.59799 m
f
0.60000002 i
1 0 0 -1 1649 1800 cm
-885.41034 1474.402 m
-885.41034 1473.9827 -884.07153 1461.751 -919.78528 1460.6202 c
-955.4989 1459.4895 -1009.0095 1461.8193 -1014.4422 1459.3029 c
-1019.8752 1456.7861 -1018.5172 1453.8502 -1018.5172 1453.8502 c
-1018.5172 1453.8502 -1019.7543 1459.4395 -1010.4905 1460.3065 c
-1001.2274 1461.1736 -937.86249 1460.1062 -912.05609 1462.2032 c
-886.24951 1464.3005 -885.41034 1474.8215 -885.41034 1474.402 c
h
-885.41034 1474.402 m
S
/Cs1 SC
0 sc
0 i
0 1 1 0 -1552.0992 1858.9008 cm
-1656.941 1574.9172 m
(!)s
/F1.1[ 13 0 0 -13 0 0]sf
-1643.261 1580.9172 m
(')s
/F1.1[ 18 0 0 -18 0 0]sf
-1633.875 1574.9172 m
(#$#\()[ 5.004000 10.800000 5.004000 0.000000 ] xS
1 w
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 1649 1800 cm
-1016.207 1485.1614 m
-987.20703 1485.1614 l
-987.20703 1515.1614 l
-1016.207 1515.1614 l
h
-1016.207 1485.1614 m
S
-852.60425 1484.6586 m
-823.60425 1484.6586 l
-823.60425 1514.6586 l
-852.60425 1514.6586 l
h
-852.60425 1484.6586 m
S
-982.26874 1485.1614 m
-953.26874 1485.1614 l
-953.26874 1515.1614 l
-982.26874 1515.1614 l
h
-982.26874 1485.1614 m
S
-818.66595 1484.6586 m
-789.66595 1484.6586 l
-789.66595 1514.6586 l
-818.66595 1514.6586 l
h
-818.66595 1484.6586 m
S
-948.33051 1485.1614 m
-919.33051 1485.1614 l
-919.33051 1515.1614 l
-948.33051 1515.1614 l
h
-948.33051 1485.1614 m
S
-914.39221 1485.1614 m
-885.39221 1485.1614 l
-885.39221 1515.1614 l
-914.39221 1515.1614 l
h
-914.39221 1485.1614 m
S
-1016.207 1519.011 m
-987.20703 1519.011 l
-987.20703 1549.011 l
-1016.207 1549.011 l
h
-1016.207 1519.011 m
S
-852.60425 1518.5082 m
-823.60425 1518.5082 l
-823.60425 1548.5082 l
-852.60425 1548.5082 l
h
-852.60425 1518.5082 m
S
-982.26874 1519.011 m
-953.26874 1519.011 l
-953.26874 1549.011 l
-982.26874 1549.011 l
h
-982.26874 1519.011 m
S
-818.66595 1518.5082 m
-789.66595 1518.5082 l
-789.66595 1548.5082 l
-818.66595 1548.5082 l
h
-818.66595 1518.5082 m
S
-948.33051 1519.011 m
-919.33051 1519.011 l
-919.33051 1549.011 l
-948.33051 1549.011 l
h
-948.33051 1519.011 m
S
-914.39221 1519.011 m
-885.39221 1519.011 l
-885.39221 1549.011 l
-914.39221 1549.011 l
h
-914.39221 1519.011 m
S
-1016.207 1552.8607 m
-987.20703 1552.8607 l
-987.20703 1582.8607 l
-1016.207 1582.8607 l
h
-1016.207 1552.8607 m
S
-852.60425 1552.3579 m
-823.60425 1552.3579 l
-823.60425 1582.3579 l
-852.60425 1582.3579 l
h
-852.60425 1552.3579 m
S
-982.26874 1552.8607 m
-953.26874 1552.8607 l
-953.26874 1582.8607 l
-982.26874 1582.8607 l
h
-982.26874 1552.8607 m
S
-818.66595 1552.3579 m
-789.66595 1552.3579 l
-789.66595 1582.3579 l
-818.66595 1582.3579 l
h
-818.66595 1552.3579 m
S
-948.33051 1552.8607 m
-919.33051 1552.8607 l
-919.33051 1582.8607 l
-948.33051 1582.8607 l
h
-948.33051 1552.8607 m
S
-914.39221 1552.8607 m
-885.39221 1552.8607 l
-885.39221 1582.8607 l
-914.39221 1582.8607 l
h
-914.39221 1552.8607 m
S
-1016.207 1586.7103 m
-987.20703 1586.7103 l
-987.20703 1616.7103 l
-1016.207 1616.7103 l
h
-1016.207 1586.7103 m
S
-852.60425 1586.2075 m
-823.60425 1586.2075 l
-823.60425 1616.2075 l
-852.60425 1616.2075 l
h
-852.60425 1586.2075 m
S
-982.26874 1586.7103 m
-953.26874 1586.7103 l
-953.26874 1616.7103 l
-982.26874 1616.7103 l
h
-982.26874 1586.7103 m
S
-818.66595 1586.2075 m
-789.66595 1586.2075 l
-789.66595 1616.2075 l
-818.66595 1616.2075 l
h
-818.66595 1586.2075 m
S
-948.33051 1586.7103 m
-919.33051 1586.7103 l
-919.33051 1616.7103 l
-948.33051 1616.7103 l
h
-948.33051 1586.7103 m
S
-914.39221 1586.7103 m
-885.39221 1586.7103 l
-885.39221 1616.7103 l
-914.39221 1616.7103 l
h
-914.39221 1586.7103 m
S
0 i
0.83741802 0.83743781 0.83742714 sc
CM
632.79297 179.43999 m
661.79297 179.43999 l
661.79297 149.43999 l
632.79297 149.43999 l
h
632.79297 179.43999 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1649 1800 cm
-1016.207 1620.5601 m
-987.20703 1620.5601 l
-987.20703 1650.5601 l
-1016.207 1650.5601 l
h
-1016.207 1620.5601 m
S
-852.60425 1620.0571 m
-823.60425 1620.0571 l
-823.60425 1650.0571 l
-852.60425 1650.0571 l
h
-852.60425 1620.0571 m
S
0 i
0.83741802 0.83743781 0.83742714 sc
CM
666.73126 179.43999 m
695.73126 179.43999 l
695.73126 149.43999 l
666.73126 149.43999 l
h
666.73126 179.43999 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1649 1800 cm
-982.26874 1620.5601 m
-953.26874 1620.5601 l
-953.26874 1650.5601 l
-982.26874 1650.5601 l
h
-982.26874 1620.5601 m
S
-818.66595 1620.0571 m
-789.66595 1620.0571 l
-789.66595 1650.0571 l
-818.66595 1650.0571 l
h
-818.66595 1620.0571 m
S
0 i
0.83741802 0.83743781 0.83742714 sc
CM
700.66949 179.43999 m
729.66949 179.43999 l
729.66949 149.43999 l
700.66949 149.43999 l
h
700.66949 179.43999 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1649 1800 cm
-948.33051 1620.5601 m
-919.33051 1620.5601 l
-919.33051 1650.5601 l
-948.33051 1650.5601 l
h
-948.33051 1620.5601 m
S
0 i
0.83741802 0.83743781 0.83742714 sc
CM
734.60779 179.43999 m
763.60779 179.43999 l
763.60779 149.43999 l
734.60779 149.43999 l
h
734.60779 179.43999 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1649 1800 cm
-914.39221 1620.5601 m
-885.39221 1620.5601 l
-885.39221 1650.5601 l
-914.39221 1650.5601 l
h
-914.39221 1620.5601 m
S
0 i
0.83741802 0.83743781 0.83742714 sc
CM
632.79297 145.59033 m
661.79297 145.59033 l
661.79297 115.59032 l
632.79297 115.59032 l
h
632.79297 145.59033 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1649 1800 cm
-1016.207 1654.4097 m
-987.20703 1654.4097 l
-987.20703 1684.4097 l
-1016.207 1684.4097 l
h
-1016.207 1654.4097 m
S
-852.60425 1653.9069 m
-823.60425 1653.9069 l
-823.60425 1683.9069 l
-852.60425 1683.9069 l
h
-852.60425 1653.9069 m
S
0 i
0.83741802 0.83743781 0.83742714 sc
CM
666.73126 145.59033 m
695.73126 145.59033 l
695.73126 115.59032 l
666.73126 115.59032 l
h
666.73126 145.59033 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1649 1800 cm
-982.26874 1654.4097 m
-953.26874 1654.4097 l
-953.26874 1684.4097 l
-982.26874 1684.4097 l
h
-982.26874 1654.4097 m
S
-818.66595 1653.9069 m
-789.66595 1653.9069 l
-789.66595 1683.9069 l
-818.66595 1683.9069 l
h
-818.66595 1653.9069 m
S
0 i
0.83741802 0.83743781 0.83742714 sc
CM
700.66949 145.59033 m
729.66949 145.59033 l
729.66949 115.59032 l
700.66949 115.59032 l
h
700.66949 145.59033 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1649 1800 cm
-948.33051 1654.4097 m
-919.33051 1654.4097 l
-919.33051 1684.4097 l
-948.33051 1684.4097 l
h
-948.33051 1654.4097 m
S
0 i
0.83741802 0.83743781 0.83742714 sc
CM
734.60779 145.59033 m
763.60779 145.59033 l
763.60779 115.59032 l
734.60779 115.59032 l
h
734.60779 145.59033 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1649 1800 cm
-914.39221 1654.4097 m
-885.39221 1654.4097 l
-885.39221 1684.4097 l
-914.39221 1684.4097 l
h
-914.39221 1654.4097 m
S
/Cs1 SC
0 sc
0 i
-1049.2451 1438.5396 m
(")s
/F1.1[ 12 0 0 -12 0 0]sf
-1035.6011 1443.5396 m
(\)*+,)[ 2.664000 6.444000 3.552000 0.000000 ] xS
/F1.1[ 18 0 0 -18 0 0]sf
-1019.1611 1438.5396 m
(#$#-)[ 5.004000 10.800000 5.004000 0.000000 ] xS
/Cs2 SC
0 0 0 sc
CM
798.55475 325.59799 m
798.55475 326.01733 798.2395 338.24908 806.65002 339.3797 c
815.06061 340.51044 827.66229 338.18073 828.94171 340.6972 c
830.22119 343.21387 829.90137 346.14978 829.90137 346.14978 c
829.90137 346.14978 830.19269 340.56055 828.01111 339.69351 c
825.82959 338.82639 810.90723 339.8938 804.82983 337.79675 c
798.75238 335.69949 798.55475 325.1785 798.55475 325.59799 c
h
798.55475 325.59799 m
f
0.5 w
0.60000002 i
1 0 0 -1 1649 1800 cm
-850.44525 1474.402 m
-850.44525 1473.9827 -850.7605 1461.751 -842.34998 1460.6202 c
-833.93939 1459.4895 -821.33771 1461.8193 -820.05829 1459.3029 c
-818.77881 1456.7861 -819.09863 1453.8502 -819.09863 1453.8502 c
-819.09863 1453.8502 -818.80731 1459.4395 -820.98889 1460.3065 c
-823.17041 1461.1736 -838.09277 1460.1062 -844.17017 1462.2032 c
-850.24762 1464.3005 -850.44525 1474.8215 -850.44525 1474.402 c
h
-850.44525 1474.402 m
S
0 i
CM
861.37885 325.59799 m
861.37885 326.01733 861.69415 338.24908 853.28357 339.3797 c
844.87305 340.51044 832.2713 338.18073 830.99194 340.6972 c
829.71246 343.21387 830.03229 346.14978 830.03229 346.14978 c
830.03229 346.14978 829.74091 340.56055 831.92255 339.69351 c
834.104 338.82639 849.02643 339.8938 855.10376 337.79675 c
861.18121 335.69949 861.37885 325.1785 861.37885 325.59799 c
h
861.37885 325.59799 m
f
0.60000002 i
1 0 0 -1 1649 1800 cm
-787.62115 1474.402 m
-787.62115 1473.9827 -787.30585 1461.751 -795.71643 1460.6202 c
-804.12695 1459.4895 -816.7287 1461.8193 -818.00806 1459.3029 c
-819.28754 1456.7861 -818.96771 1453.8502 -818.96771 1453.8502 c
-818.96771 1453.8502 -819.25909 1459.4395 -817.07745 1460.3065 c
-814.896 1461.1736 -799.97357 1460.1062 -793.89624 1462.2032 c
-787.81879 1464.3005 -787.62115 1474.8215 -787.62115 1474.402 c
h
-787.62115 1474.402 m
S
/Cs1 SC
0 sc
0 i
-853.26318 1435.2035 m
(")s
/F1.1[ 12 0 0 -12 0 0]sf
-839.6192 1440.2035 m
(./01,)[ 3.996000 2.664000 6.888000 6.672000 0.000000 ] xS
/F1.1[ 18 0 0 -18 0 0]sf
-815.6192 1435.2035 m
(#$#2)[ 5.004000 10.800000 5.004000 0.000000 ] xS
2 w
0.60000002 i
/Cs2 SC
0 0.58980101 1 sc
-1230.0192 1597.1434 m
-1230.0192 1572.4276 l
-1170.4473 1572.4276 l
-1170.4473 1560.0696 l
-1159.4473 1584.7855 l
-1170.4473 1609.5015 l
-1170.4473 1597.1434 l
h
-1230.0192 1597.1434 m
S
/Cs1 SC
0 sc
0 i
-1053.9672 1768.4752 m
(345/6*5)[ 15.678000 10.332000 10.674000 3.996000 9.324000 9.666000 0.000000 ] xS
-1064.9741 1789.9791 m
(7\)04./,18#9)[ 11.664000 3.996000 10.332000 10.332000 5.994000 3.996000 5.670000 10.008000 15.354000 5.004000 0.000000 ] xS
-842.70154 1767.7749 m
(:/.*;,)[ 12.672000 3.996000 5.670000 9.666000 9.666000 0.000000 ] xS
-881.39252 1789.2788 m
(<8=\)*8*>,?,/4>)[ 4.662000 15.354000 10.674000 3.996000 9.666000 15.354000 9.666000 10.008000 5.670000 9.666000 5.670000 3.996000 10.332000 0.000000 ] xS
/F1.1[ 21 0 0 -21 0 0]sf
-1462.1572 1725.5396 m
(@#)[ 5.439000 0.000000 ] xS
/F2.1[ 21 0 0 -21 0 0]sf
-1450.8802 1725.5396 m
(!"#$"#%"#&'#)[ 11.676000 5.838000 5.838000 11.277000 5.838000 5.838000 11.676000 5.838000 5.838000 11.676000 11.676000 0.000000 ] xS
/F1.1[ 21 0 0 -21 0 0]sf
-1352.0332 1725.5396 m
(A)s
-1070.7386 1727.8215 m
(@#)[ 5.439000 0.000000 ] xS
/F2.1[ 21 0 0 -21 0 0]sf
-1059.4617 1727.8215 m
(!"#$"#%"#\(#)[ 11.676000 5.838000 5.838000 11.277000 5.838000 5.838000 11.676000 5.838000 5.838000 11.676000 0.000000 ] xS
/F1.1[ 21 0 0 -21 0 0]sf
-972.29065 1727.8215 m
(A)s
-870.97668 1725.5396 m
(@#)[ 5.439000 0.000000 ] xS
/F2.1[ 21 0 0 -21 0 0]sf
-859.69971 1725.5396 m
(!"#$"#%"#\)#)[ 11.676000 5.838000 5.838000 11.277000 5.838000 5.838000 11.676000 5.838000 5.838000 11.676000 0.000000 ] xS
/F1.1[ 21 0 0 -21 0 0]sf
-772.52869 1725.5396 m
(A)s
0.60000002 i
/Cs2 SC
0 0.58980101 1 sc
-1230.0192 1725.9625 m
-1230.0192 1715.6805 l
-1170.4473 1715.6805 l
-1170.4473 1710.5396 l
-1159.4473 1720.8215 l
-1170.4473 1731.1035 l
-1170.4473 1725.9625 l
h
-1230.0192 1725.9625 m
S
0 i
0 0 0 sc
CM
79.236267 325.59799 m
79.236267 326.01733 77.576286 338.24908 121.85889 339.3797 c
166.14134 340.51044 232.49071 338.18073 239.22697 340.6972 c
245.96359 343.21387 244.27965 346.14978 244.27965 346.14978 c
244.27965 346.14978 245.81355 340.56055 234.32716 339.69351 c
222.84143 338.82639 144.27333 339.8938 112.27522 337.79675 c
80.276779 335.69949 79.236267 325.1785 79.236267 325.59799 c
h
79.236267 325.59799 m
f
0.5 w
0.60000002 i
1 0 0 -1 1649 1800 cm
-1569.7637 1474.402 m
-1569.7637 1473.9827 -1571.4237 1461.751 -1527.1411 1460.6202 c
-1482.8586 1459.4895 -1416.5093 1461.8193 -1409.7731 1459.3029 c
-1403.0364 1456.7861 -1404.7203 1453.8502 -1404.7203 1453.8502 c
-1404.7203 1453.8502 -1403.1864 1459.4395 -1414.6729 1460.3065 c
-1426.1586 1461.1736 -1504.7267 1460.1062 -1536.7247 1462.2032 c
-1568.7233 1464.3005 -1569.7637 1474.8215 -1569.7637 1474.402 c
h
-1569.7637 1474.402 m
S
0 i
CM
410.0123 325.59799 m
410.0123 326.01733 411.6723 338.24908 367.38968 339.3797 c
323.10724 340.51044 256.75787 338.18073 250.02159 340.6972 c
243.28499 343.21387 244.96893 346.14978 244.96893 346.14978 c
244.96893 346.14978 243.43503 340.56055 254.92142 339.69351 c
266.40714 338.82639 344.97525 339.8938 376.97336 337.79675 c
408.9718 335.69949 410.0123 325.1785 410.0123 325.59799 c
h
410.0123 325.59799 m
f
0.60000002 i
1 0 0 -1 1649 1800 cm
-1238.9877 1474.402 m
-1238.9877 1473.9827 -1237.3278 1461.751 -1281.6104 1460.6202 c
-1325.8927 1459.4895 -1392.2421 1461.8193 -1398.9784 1459.3029 c
-1405.715 1456.7861 -1404.031 1453.8502 -1404.031 1453.8502 c
-1404.031 1453.8502 -1405.5649 1459.4395 -1394.0786 1460.3065 c
-1382.5929 1461.1736 -1304.0248 1460.1062 -1272.0266 1462.2032 c
-1240.0282 1464.3005 -1238.9877 1474.8215 -1238.9877 1474.402 c
h
-1238.9877 1474.402 m
S
1 w
-1572.2627 1486.9069 m
-1543.2627 1486.9069 l
-1543.2627 1516.9069 l
-1572.2627 1516.9069 l
h
-1572.2627 1486.9069 m
S
-1538.3245 1486.9069 m
-1509.3245 1486.9069 l
-1509.3245 1516.9069 l
-1538.3245 1516.9069 l
h
-1538.3245 1486.9069 m
S
-1504.3861 1486.9069 m
-1475.3861 1486.9069 l
-1475.3861 1516.9069 l
-1504.3861 1516.9069 l
h
-1504.3861 1486.9069 m
S
-1470.4479 1486.9069 m
-1441.4479 1486.9069 l
-1441.4479 1516.9069 l
-1470.4479 1516.9069 l
h
-1470.4479 1486.9069 m
S
-1572.2627 1520.7565 m
-1543.2627 1520.7565 l
-1543.2627 1550.7565 l
-1572.2627 1550.7565 l
h
-1572.2627 1520.7565 m
S
-1538.3245 1520.7565 m
-1509.3245 1520.7565 l
-1509.3245 1550.7565 l
-1538.3245 1550.7565 l
h
-1538.3245 1520.7565 m
S
-1504.3861 1520.7565 m
-1475.3861 1520.7565 l
-1475.3861 1550.7565 l
-1504.3861 1550.7565 l
h
-1504.3861 1520.7565 m
S
-1470.4479 1520.7565 m
-1441.4479 1520.7565 l
-1441.4479 1550.7565 l
-1470.4479 1550.7565 l
h
-1470.4479 1520.7565 m
S
-1572.2627 1554.6062 m
-1543.2627 1554.6062 l
-1543.2627 1584.6062 l
-1572.2627 1584.6062 l
h
-1572.2627 1554.6062 m
S
-1538.3245 1554.6062 m
-1509.3245 1554.6062 l
-1509.3245 1584.6062 l
-1538.3245 1584.6062 l
h
-1538.3245 1554.6062 m
S
-1504.3861 1554.6062 m
-1475.3861 1554.6062 l
-1475.3861 1584.6062 l
-1504.3861 1584.6062 l
h
-1504.3861 1554.6062 m
S
-1470.4479 1554.6062 m
-1441.4479 1554.6062 l
-1441.4479 1584.6062 l
-1470.4479 1584.6062 l
h
-1470.4479 1554.6062 m
S
-1572.2627 1588.4558 m
-1543.2627 1588.4558 l
-1543.2627 1618.4558 l
-1572.2627 1618.4558 l
h
-1572.2627 1588.4558 m
S
-1538.3245 1588.4558 m
-1509.3245 1588.4558 l
-1509.3245 1618.4558 l
-1538.3245 1618.4558 l
h
-1538.3245 1588.4558 m
S
-1504.3861 1588.4558 m
-1475.3861 1588.4558 l
-1475.3861 1618.4558 l
-1504.3861 1618.4558 l
h
-1504.3861 1588.4558 m
S
-1470.4479 1588.4558 m
-1441.4479 1588.4558 l
-1441.4479 1618.4558 l
-1470.4479 1618.4558 l
h
-1470.4479 1588.4558 m
S
0 i
0.83741802 0.83743781 0.83742714 sc
CM
76.73732 177.69449 m
105.73732 177.69449 l
105.73732 147.69449 l
76.73732 147.69449 l
h
76.73732 177.69449 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1649 1800 cm
-1572.2627 1622.3055 m
-1543.2627 1622.3055 l
-1543.2627 1652.3055 l
-1572.2627 1652.3055 l
h
-1572.2627 1622.3055 m
S
0 i
0.83741802 0.83743781 0.83742714 sc
CM
110.67559 177.69449 m
139.67558 177.69449 l
139.67558 147.69449 l
110.67559 147.69449 l
h
110.67559 177.69449 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1649 1800 cm
-1538.3245 1622.3055 m
-1509.3245 1622.3055 l
-1509.3245 1652.3055 l
-1538.3245 1652.3055 l
h
-1538.3245 1622.3055 m
S
0 i
0.83741802 0.83743781 0.83742714 sc
CM
144.61386 177.69449 m
173.61386 177.69449 l
173.61386 147.69449 l
144.61386 147.69449 l
h
144.61386 177.69449 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1649 1800 cm
-1504.3861 1622.3055 m
-1475.3861 1622.3055 l
-1475.3861 1652.3055 l
-1504.3861 1652.3055 l
h
-1504.3861 1622.3055 m
S
0 i
0.83741802 0.83743781 0.83742714 sc
CM
178.55214 177.69449 m
207.55214 177.69449 l
207.55214 147.69449 l
178.55214 147.69449 l
h
178.55214 177.69449 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1649 1800 cm
-1470.4479 1622.3055 m
-1441.4479 1622.3055 l
-1441.4479 1652.3055 l
-1470.4479 1652.3055 l
h
-1470.4479 1622.3055 m
S
0 i
0.83741802 0.83743781 0.83742714 sc
CM
76.73732 143.84483 m
105.73732 143.84483 l
105.73732 113.84483 l
76.73732 113.84483 l
h
76.73732 143.84483 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1649 1800 cm
-1572.2627 1656.1552 m
-1543.2627 1656.1552 l
-1543.2627 1686.1552 l
-1572.2627 1686.1552 l
h
-1572.2627 1656.1552 m
S
0 i
0.83741802 0.83743781 0.83742714 sc
CM
110.67559 143.84483 m
139.67558 143.84483 l
139.67558 113.84483 l
110.67559 113.84483 l
h
110.67559 143.84483 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1649 1800 cm
-1538.3245 1656.1552 m
-1509.3245 1656.1552 l
-1509.3245 1686.1552 l
-1538.3245 1686.1552 l
h
-1538.3245 1656.1552 m
S
0 i
0.83741802 0.83743781 0.83742714 sc
CM
144.61386 143.84483 m
173.61386 143.84483 l
173.61386 113.84483 l
144.61386 113.84483 l
h
144.61386 143.84483 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1649 1800 cm
-1504.3861 1656.1552 m
-1475.3861 1656.1552 l
-1475.3861 1686.1552 l
-1504.3861 1686.1552 l
h
-1504.3861 1656.1552 m
S
0 i
0.83741802 0.83743781 0.83742714 sc
CM
178.55214 143.84483 m
207.55214 143.84483 l
207.55214 113.84483 l
178.55214 113.84483 l
h
178.55214 143.84483 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1649 1800 cm
-1470.4479 1656.1552 m
-1441.4479 1656.1552 l
-1441.4479 1686.1552 l
-1470.4479 1686.1552 l
h
-1470.4479 1656.1552 m
S
-1151.9601 1484.6586 m
-1122.9601 1484.6586 l
-1122.9601 1514.6586 l
-1151.9601 1514.6586 l
h
-1151.9601 1484.6586 m
S
-1118.0219 1484.6586 m
-1089.0219 1484.6586 l
-1089.0219 1514.6586 l
-1118.0219 1514.6586 l
h
-1118.0219 1484.6586 m
S
-1084.0836 1484.6586 m
-1055.0836 1484.6586 l
-1055.0836 1514.6586 l
-1084.0836 1514.6586 l
h
-1084.0836 1484.6586 m
S
-1050.1453 1484.6586 m
-1021.1453 1484.6586 l
-1021.1453 1514.6586 l
-1050.1453 1514.6586 l
h
-1050.1453 1484.6586 m
S
-1151.9601 1518.5082 m
-1122.9601 1518.5082 l
-1122.9601 1548.5082 l
-1151.9601 1548.5082 l
h
-1151.9601 1518.5082 m
S
-1118.0219 1518.5082 m
-1089.0219 1518.5082 l
-1089.0219 1548.5082 l
-1118.0219 1548.5082 l
h
-1118.0219 1518.5082 m
S
-1084.0836 1518.5082 m
-1055.0836 1518.5082 l
-1055.0836 1548.5082 l
-1084.0836 1548.5082 l
h
-1084.0836 1518.5082 m
S
-1050.1453 1518.5082 m
-1021.1453 1518.5082 l
-1021.1453 1548.5082 l
-1050.1453 1548.5082 l
h
-1050.1453 1518.5082 m
S
-1151.9601 1552.3579 m
-1122.9601 1552.3579 l
-1122.9601 1582.3579 l
-1151.9601 1582.3579 l
h
-1151.9601 1552.3579 m
S
-1118.0219 1552.3579 m
-1089.0219 1552.3579 l
-1089.0219 1582.3579 l
-1118.0219 1582.3579 l
h
-1118.0219 1552.3579 m
S
-1084.0836 1552.3579 m
-1055.0836 1552.3579 l
-1055.0836 1582.3579 l
-1084.0836 1582.3579 l
h
-1084.0836 1552.3579 m
S
-1050.1453 1552.3579 m
-1021.1453 1552.3579 l
-1021.1453 1582.3579 l
-1050.1453 1582.3579 l
h
-1050.1453 1552.3579 m
S
-1151.9601 1586.2075 m
-1122.9601 1586.2075 l
-1122.9601 1616.2075 l
-1151.9601 1616.2075 l
h
-1151.9601 1586.2075 m
S
-1118.0219 1586.2075 m
-1089.0219 1586.2075 l
-1089.0219 1616.2075 l
-1118.0219 1616.2075 l
h
-1118.0219 1586.2075 m
S
-1084.0836 1586.2075 m
-1055.0836 1586.2075 l
-1055.0836 1616.2075 l
-1084.0836 1616.2075 l
h
-1084.0836 1586.2075 m
S
-1050.1453 1586.2075 m
-1021.1453 1586.2075 l
-1021.1453 1616.2075 l
-1050.1453 1616.2075 l
h
-1050.1453 1586.2075 m
S
0 i
0.83741802 0.83743781 0.83742714 sc
CM
497.03989 179.94283 m
526.03986 179.94283 l
526.03986 149.94283 l
497.03989 149.94283 l
h
497.03989 179.94283 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1649 1800 cm
-1151.9601 1620.0571 m
-1122.9601 1620.0571 l
-1122.9601 1650.0571 l
-1151.9601 1650.0571 l
h
-1151.9601 1620.0571 m
S
0 i
0.83741802 0.83743781 0.83742714 sc
CM
530.97815 179.94283 m
559.97815 179.94283 l
559.97815 149.94283 l
530.97815 149.94283 l
h
530.97815 179.94283 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1649 1800 cm
-1118.0219 1620.0571 m
-1089.0219 1620.0571 l
-1089.0219 1650.0571 l
-1118.0219 1650.0571 l
h
-1118.0219 1620.0571 m
S
0 i
0.83741802 0.83743781 0.83742714 sc
CM
564.91644 179.94283 m
593.91644 179.94283 l
593.91644 149.94283 l
564.91644 149.94283 l
h
564.91644 179.94283 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1649 1800 cm
-1084.0836 1620.0571 m
-1055.0836 1620.0571 l
-1055.0836 1650.0571 l
-1084.0836 1650.0571 l
h
-1084.0836 1620.0571 m
S
0 i
0.83741802 0.83743781 0.83742714 sc
CM
598.85468 179.94283 m
627.85468 179.94283 l
627.85468 149.94283 l
598.85468 149.94283 l
h
598.85468 179.94283 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1649 1800 cm
-1050.1453 1620.0571 m
-1021.1453 1620.0571 l
-1021.1453 1650.0571 l
-1050.1453 1650.0571 l
h
-1050.1453 1620.0571 m
S
0 i
0.83741802 0.83743781 0.83742714 sc
CM
497.03989 146.09315 m
526.03986 146.09315 l
526.03986 116.09315 l
497.03989 116.09315 l
h
497.03989 146.09315 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1649 1800 cm
-1151.9601 1653.9069 m
-1122.9601 1653.9069 l
-1122.9601 1683.9069 l
-1151.9601 1683.9069 l
h
-1151.9601 1653.9069 m
S
0 i
0.83741802 0.83743781 0.83742714 sc
CM
530.97815 146.09315 m
559.97815 146.09315 l
559.97815 116.09315 l
530.97815 116.09315 l
h
530.97815 146.09315 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1649 1800 cm
-1118.0219 1653.9069 m
-1089.0219 1653.9069 l
-1089.0219 1683.9069 l
-1118.0219 1683.9069 l
h
-1118.0219 1653.9069 m
S
0 i
0.83741802 0.83743781 0.83742714 sc
CM
564.91644 146.09315 m
593.91644 146.09315 l
593.91644 116.09315 l
564.91644 116.09315 l
h
564.91644 146.09315 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1649 1800 cm
-1084.0836 1653.9069 m
-1055.0836 1653.9069 l
-1055.0836 1683.9069 l
-1084.0836 1683.9069 l
h
-1084.0836 1653.9069 m
S
0 i
0.83741802 0.83743781 0.83742714 sc
CM
598.85468 146.09315 m
627.85468 146.09315 l
627.85468 116.09315 l
598.85468 116.09315 l
h
598.85468 146.09315 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1649 1800 cm
-1050.1453 1653.9069 m
-1021.1453 1653.9069 l
-1021.1453 1683.9069 l
-1050.1453 1683.9069 l
h
-1050.1453 1653.9069 m
S
ep
end
%%Trailer
%%EOF
