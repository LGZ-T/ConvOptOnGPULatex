%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 520.000000 188.000000
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 520 188
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 520 188
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /zero put
dup 34 /eight put
dup 35 /four put
dup 36 /six put
dup 37 /seven put
dup 38 /one put
dup 39 /two put
dup 40 /three put
dup 41 /five put
dup 42 /nine put
dup 43 /T put
dup 44 /h put
dup 45 /r put
dup 46 /e put
dup 47 /a put
dup 48 /d put
dup 49 /space put
dup 50 /I put
dup 51 /D put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<







00>] def
/CharStrings 21 dict dup begin
/.notdef 0 def
/space 1 def
/zero 2 def
/one 3 def
/two 4 def
/three 5 def
/four 6 def
/five 7 def
/six 8 def
/seven 9 def
/eight 10 def
/nine 11 def
/D 12 def
/I 13 def
/T 14 def
/a 15 def
/d 16 def
/e 17 def
/h 18 def
/r 19 def
/uni2B91 20 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4151493 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C92633B2598E0B1EDFA3C2732C9D3498122A5E23C1999619F9F2A05B051C0B681D7A669278A382A773898B9BA5E74E76D79507B26C6A220110B20D37F5163FA090532B073A3E57F242B478333FC8C597B4F9DCA3AC30189126322ADFD8883C4D8EFE8F6FD94BC066CF700C23C2EDC1B2A2186B2710D3BC4060D5A5E26F316CD35DE2F98B78B5E165A98FFC68153E24AA0294FD85FFA8BB79095B8321946FC026F7EF6956295851BDD19FDD41B9B81A910BE2FF530C4F5DCE4DAEA71A3B16E16B1FFAC1D55A8935F7E1A6FA1A9AFE8A80483BAEC4A530A4BF44BEA7934687D121F7037D17508E2F3D4CA4863A0D8613720BA73847AC6799743081D7068C1E8DADD6F961658E24CAA2BDA412F898007F7A8133A347C562C607494ECEA38B903ABC7BFA5EB352EDABF25DFA82FD4D26E2ACB71DB5CDF018B21EEBED7CFC46C256D72F36CC283242DF6A5E8BBE3257EF2D52598326544AD8BF5760AF3A500859CB11616666A1DA63ACE2CB62C7A052BCAFDA2E838245A6C51FA522FA494DE4A4CBFFCD493FDD301227F9CC0A2AAB3E8C9B184222D206067F8A900A0216AF2B5A567E72E9079F5138CC07E57E68D7A6903F50156A2D75E5FD76D2861298CEE15D67ED6947678946007C210951C2445C3357EC19D055978F0F7FC2EFBBDD759807542DBE976FD9462FF9293FEB9F458A938EA14F139DBFA41AC21FAA584166CDD54012EDC55E6A8C62E821C76FF88C74E2058C9453F9C2605DDDDAAF9A0FE53BBA86FF8BF

817111E52A69D7EC1C44C555B6CFE67957E7A62DD7AFCE997ED4AA0EC3DF87D20A470B378382F033E1C61963C1CD3FE555271756F35A548D86C4A238C47119DCAC741BB5E723C8FC04AB30AC39A5DF606F4EE8709B532395FB53A531CB1836D4FF33166BB10A42624B51FD3AF4415A3A89A99C6485D38FD67E3BF9CBF64261C1C012F8478C31686E66459809BA72E87F2060B09E4B0D34A588D906E2DDA1A9F45E320B974CAC91F6FAC97915E3830BE784C58AEBAC2BA5BF2EDBDF32A3386AD74A95EF0F953C87A76613153794537E83B717C183245F732FF92B83CCDED099342CBA258B36E422AD3A048500394082F2FC0ACAB189857CB24E0DDD99F3635239B0C3E5B07C810412DC54B169F2163851286C8974BEB7F52A603BF3E3FD083F9C809946E7101305CDAE63A5E1DE276C3F02D20D63C8E334BC22989E41B2FB335331F9322C84D7D76FDEE6F899A16FF87EA3970547B8886E7B18F17657996533B48B92E2DF40215F2809068A97675973D363070B9462F33CDD810ECCB15E9BBD4DBE76049FCC4CBCDDD56BF8065E2FA773C2F7855CFE61C01C60950A8AD2A45D4852358445792087837579B156B9A13EA1D738D0E5316356DF0E16BD9869630D2FA14BA3B9B2A2F4376EB9B5077F89FA310324C2EC34F6E6A2A4A9A0360F05C02AE7C072991BC9A8235DEF1870E4B00707C1251570D4756690B9A89FE9B1B0BE23B6D3D70F7EAC3870A8D381D34209CE96567102AE31D8E6450257825CD0E0BA52241BC280662212AD8585C8C470E2FEC05FA85AADD0DD0C445E006D46B6302C7B720850EEE0B7D222C3AAB4069E5AC4E565E390C0F7F44B4EEC937E8B75A7C8DDF111701223E6C78F7BB772B759E58BE49920C9F05B479D0E540D4A524BF2BDECD3B3A86ACF45C42630B774672A5F87921201160845541F7F450768FB7A49A47AF91359144E2AC37BD586DD32D7BF842648ACDB470580E9BE4BBBBD3932C7B1D3E075A0231832CB0C01C022093D72A70B80E2E6D1A59EE379E0DCB73B6EBFDEF6DD13B37083EB2E232AF396C1BC75EBDDD2DD737D443D6FAD20CEA88F3AB2E93A9204472535A1F33B32B08A97714703EECB0A7650A9649982F769379E655CA2ED276E352EABBB9935435F541742B42A9FFB182D70C3CC3B1453AF0F832E28B1698F409F2211F2A2857646DD38402BCFA7C9E52A32BFB1709C847B3859D4744C677DD20F5F9486B501A385322BEA2BA4E7701981DC823DB1810A348CF12D3718C34736236A1D60E608295CD6DEBC138874E1F7513263836FB0503E197F6E565FB48E4BA6E3FE951079A93DCE33D586CD89A0C69B9B2F8E249CCE13304A9A0A54A1BA05A492EC2076756AB27B4DF69042B667F79197C4CD45852CA0CB6F1EADADC22950F16747C640093DE61A1DFACE0F253FDE6E6DBBEB579840DE289C9DAAEF24
F65DB89FB46C1A6BBB4E948FA7577FBA28C906F024690BA5D6BE122DF3B7634F0F6C28CF8EEC1D9426D3A59006A7DFC5122133B0CFE653E95AC1957486E9CC95F70599D480FD79FFED25308D0D4F88FE6F36090F1415305AEAF339B1F177AB7005F0D245091D6ABD2E3A53A4DA0B761EC971DE803EB3DBB484EB84800E79EC6C2F866029CD381D337AF021F39EAFFE71132C605CB8A2BC886D66594724B31C8EA40EFF8A1DF571D3F02585642FA3320977C3EC8920876CFE24E4192CE2A58C7091D3CBDA13C030E4AB4AA7E377722A7183B798E1A928FF0540BE5D56F77E99FB515728EA7448772EE06D56099C17438685EC77C834D394BA5733F1F9F455E4E8B8B85A6711F6AD30B9875BB0C6F72EF37B761100B96ECD400CF3790A07FCC23ADE85FEFC7B240B0DC290A16CED6D2C068A9696479E8708BC3B6DC38601AB95D13D06871C407C3ED4D517F3B1B89B1D693DEA0EDF0A1C4EA0BAB001502B9494BF82F1568045A7B26EA5D678780A9152F8EAB841FCF8FBFED0572FF8B7AA959FC9022D931A09891C2D36DB1D26A52C864B040EF2A6310D9F1F52659B23029B1F9114EAA64674622DF453FA4375D32DEFDF06B0205ED16A904D9736DF778F592DE175255EDF40AFB0105BA3954900A3FD1FEEA14156474E92C76B4CB5333B298A0AF183CB3E14259F79E5D8531827BA611E73DC3816C9892645D3FB535600CBF316573F249F6818592085BA3CB01113BDE6CF159AD137709A1A2B86576C162FCB30D9BFDD7776A2CCDE03CE3F415A66A782477710FC4DFCD3BDA779D4A049ECFED7262FFDF6E2D7505DD9FEA216F30718C3621286B47695095BB813A1481D54503F5FCBE24B415267288C55BC86212BB915AE3F280F1DC383B2E5DE95A26EDA818AB3A3AE7434F0BEA7DF7983579389CFF367A9774D2ED8CD159C2347F0757C9B9B7303363AAF9DCE620EB7DA5CD1128C8222E9B03E940714FC0D9089409BA1BE5FB8552B3B30A4266998B0E32D209FB5C2192786E4BC15C766D0ABB8729A75F14B92AF90B0306CFE85763113DF0D5322995A085B0E03552B71A1E5065A30DAF3CD80FF0C0BD6FDA3F605505792A65B00ACF895195A245DD77178B58483107CD1BF457FDA7232942F3768129EAB22E320C55818B8A89A551C53BC8A3D3542D244014189D618BCEF0997080F1F4AF673F1F7C6C82876C8CB353DBFEDC0BB834C8AD4BB27405EC60F0EBBB2B8C359EDB31B2FCE626BF75AD73686E1CADA43E88C32CC7BEE46A2047F3E34539EFA1C15B416E466878B8CCA80CB47C9FD5E02D4A94ECB50AA53999FEF2F6089BC07F1C5961C4C019AADF27A87C4CCD8CB462189EEBDF73A91081D708BEB71CF4C2AD98392C103F12D7107229B37C2B93483AFF00877B27086191D2E8E33981A3B78793B236F4BC89DD337666B61C92B4768842D5E6FDB
206ADBC1FC30052674FF86FDA4DABD81A2D380EE65EAF2BFF3E63A35E30C9B44A20C9A95F956BA0516B249BA43FE7169BDEEEC1FB863685778E37C0463565A63BB05C4BAFB3DA580591386983883F67C0A8FD9295DC66BD5A18C9F175F626E6E2B832DCF18324215F5B88BE6B12DAEFA0667D1522146FA67BED53EFB7A1EA0B914CA3C7543DE86952CDFCBE7776D5818021C49CFE184562C46D26F9FF02531B8396066C4ED5F4B1A7B9AA25061042740D36600B7FC9113827C2263142C438C0FFFF4D4F859EBABD09D1FED8BC29CC4D4979A1836F2AE68C4A2EDDC541A85559E61BC5B68B836054F6DEF12B85AD2F67D6BA828CD85D5A9F9D2B247E669384820FF32CC332B739879918EAFE266E9A0D8AF899CC9CF53DD940C7355422845CB346EFF0C153FE9E88B3A3C275B6A50B0D9B03C842D8AC999A8193A27C2FC0CF7E67B2F390521D0E59063652DF5B75E6B1B231A9C862451D550FC79EEBFBC70C630DBC6DEE068A0DBBD2557088EDC38904A756F7FA97ED982F70ACD53C447935C595CDADFFFAD555BED82BB3869E61301973F12D4B07D2488D4706C1E1411FF78743E19F72085E8F71A6460347592AC90181FD442EFD4B599FC224B3E605299042834506A30677B80F4D34BAD0BFA6F2DDA9C8E6FBBD8647CB1DD0DFF68798E471186A3B68B944139C56AAE6C3D28A47927B558BC77336E0726B30B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: HelveticaNeue-Bold
%!FontType1-1.0: HelveticaNeue-Bold 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /zero put
dup 34 /one put
dup 35 /two put
dup 36 /three put
dup 37 /five put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1018 1 index div -481 2 index div 1437 3 index div 1141 5 -1 roll div]cvx def
/sfnts [<



00001C2BBF0012002C0025001A0012000C0000001C2BBF00130024001F001A0012000C0000001C2B00BF000E0030002500200017000C0000001C2BBF000F0034002B00200017000C0000001C2BBF0010002A0025001A0012000C0000001C2B00BA00140004001B2BB8000D20457D691844B8000A2B00BA00010002000C2B01BA00030002000C2B01BE00030028002000190012000B00122BBE00040024001D00170011000A00122B00BE00010033002A00210017000E00122BBE0002002A0022001B0013000C00122B00BA0005000400112BB8000020457D691844B800002B00
00>] def
/CharStrings 8 dict dup begin
/.notdef 0 def
/zero 1 def
/one 2 def
/two 3 def
/three 4 def
/five 5 def
/uni2B90 6 def
/uni2B91 7 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-1018 -481 1437 1141}def
/UniqueID 4037426 def
currentdict currentfile eexec

EDA8586F0FCBF5B62CD3B2AD6C2F8CEA0BCF8CD34C7B081FE65D86239BE43FE52A62158C42B25311D1F9FE380E17C98972A9ABA5617106BC9536BFB54EF805E4DDFEBEF88DC438FD08E0FD428542475F5C1B413E61EC611FAFEF1330677DD83F1A6E5734C660A75D2CC2596AE6DDFBB07789629D2C607C156994BCC89185D24E4469C4AE0F7A91222C42E16B1DAF7FBA6930704BB7859A1C8076E88EDA39336B4310DE414F4AA46BD06CA676315C5553FA69E20082039409112E343377FF3431629FD1B7C315A23B172794D8085C53D101BC3FF3F14CBAFD4BC7CACE40DC9D5E204748DE5646EE2B79DE6C2B6461A132DEE3099B5257B3C97CCFF04D1FFA91B11C6893D44FE57492A96DDB07C8C83F311453AF726FFC69C5B86E7A6E349FBC286555C8335FD7B3EDB5DCEFA5BBBBCF985E956D2DA544EAA6B97502556D853A548989D7D74796BFBCEA5BEBBE15527D21DAD413CE6F7F04B0C05561B69257DA21BE60F33B311E1D23E64691110D462B152ACF05C673305587D0F1BB97946AF2FB546DB97A18B5334E7A12CBB5DA72EF6AA8E27E698425F8FB9D5DAF8039707808F4D37FEC8E15DA81E22FC0AC63AB5520407A5812D47D752398DF71625A3432C4F8567ED511D2CBEE1FC30E6BAD0BC25E8CDA7E5BEA9E7AB3110C8EC991DCB185264CF417D18A3091E4E31334AEA43D6DA27AD288BBEBB8CC20085E5C48E365F05134872A5E3B3A75F0E96AD1BB995ED4C458EC69EFD465608C1AF9F91D40186D687DB4AE8241364308BEAF84F71F64E3B4D50DE068A8C9E127E9652DAF41B7E740749143E2B2400D02E65813C9FD75E68CE508DACFBA420DC793D1E6CF98154F49CFA1E30C9A926AEDD927103734397C80920873AFCA34D027EA8E1B6DFB08E290579B577B345BC150196326476598EAD35E8F7848FE99E3C17D57852DDEF698CBD35C397BAEB301AA4323774FB24DF055EA98AFBE2B019323D90E40F9FAE4D64F6B85B86C8F517970ED5E31C22DE87EF7EAD1C5E86AF1F9CA82E2E7D4C6ACD8D74C31CF161B76DE2A5FE6614F29A688DB529CE4476CBFE2BDA58353C8F6138CBFB35093ECB8B88C1585910CFE8F0F72473F4C63E576FCF93CE71AE26C155C9333A314FAC59D2C5979453B47CF43AF9F36776299916E7247202F0CD84848B32930A1C66ABBC1F937E7A916BDBC0171C38D876FDCA8044AD2636905997B5A41717A62A342E8D62C0428949A6C958A8316289A3BEA7F627580E3C09DC7AF63DEBB594F16DE0B67C9654DBB851DE8F6AD343243C4611E187BB9774EFC23ABFA61ABA594FA064E88778DD1C42FB54F26E4322C92FAC74A395CA253C4E9356B98390AE0177FA424730B14CE1B3C9E12EC6A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Bold cguidfix
/F2.1/HelveticaNeue-Bold renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 520 188 rc
0 188 m
520 188 l
520 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-2010.9703 1434.2178 m
3417.7427 1434.2178 l
3417.7427 -2420.2375 l
-2010.9703 -2420.2375 l
h
-2010.9703 1434.2178 m
f
0.80000001 0.80000001 0.80000001 sc
78.542 135.94394 m
106.542 135.94394 l
106.542 107.94395 l
78.542 107.94395 l
h
78.542 135.94394 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 1238 804 cm
-1159.458 668.05603 m
-1131.458 668.05603 l
-1131.458 696.05603 l
-1159.458 696.05603 l
h
-1159.458 668.05603 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 16 0 0 -16 0 0]sf
-1149.906 687.05603 m
(!)s
/Cs2 SC
0.80000001 0.80000001 0.80000001 sc
CM
358.54199 135.94394 m
386.54199 135.94394 l
386.54199 107.94395 l
358.54199 107.94395 l
h
358.54199 135.94394 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1238 804 cm
-879.45801 668.05603 m
-851.45801 668.05603 l
-851.45801 696.05603 l
-879.45801 696.05603 l
h
-879.45801 668.05603 m
S
/Cs1 SC
0 sc
0 i
-869.90601 687.05603 m
(")s
/Cs2 SC
0.80000001 0.80000001 0.80000001 sc
CM
218.54201 135.94394 m
246.54201 135.94394 l
246.54201 107.94395 l
218.54201 107.94395 l
h
218.54201 135.94394 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1238 804 cm
-1019.458 668.05603 m
-991.45801 668.05603 l
-991.45801 696.05603 l
-1019.458 696.05603 l
h
-1019.458 668.05603 m
S
/Cs1 SC
0 sc
0 i
-1009.906 687.05603 m
(#)s
/Cs2 SC
0.80000001 0.80000001 0.80000001 sc
CM
218.54201 65.943947 m
246.54201 65.943947 l
246.54201 37.943943 l
218.54201 37.943943 l
h
218.54201 65.943947 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1238 804 cm
-1019.458 738.05603 m
-991.45801 738.05603 l
-991.45801 766.05603 l
-1019.458 766.05603 l
h
-1019.458 738.05603 m
S
/Cs1 SC
0 sc
0 i
-1009.906 757.05603 m
($)s
/Cs2 SC
0.80000001 0.80000001 0.80000001 sc
CM
218.54201 30.943943 m
246.54201 30.943943 l
246.54201 2.9439433 l
218.54201 2.9439433 l
h
218.54201 30.943943 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1238 804 cm
-1019.458 773.05603 m
-991.45801 773.05603 l
-991.45801 801.05603 l
-1019.458 801.05603 l
h
-1019.458 773.05603 m
S
/Cs1 SC
0 sc
0 i
-1009.906 792.05603 m
(%)s
/Cs2 SC
0.80000001 0.80000001 0.80000001 sc
CM
490.978 135.94394 m
518.97803 135.94394 l
518.97803 107.94395 l
490.978 107.94395 l
h
490.978 135.94394 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1238 804 cm
-747.02197 668.05603 m
-719.02197 668.05603 l
-719.02197 696.05603 l
-747.02197 696.05603 l
h
-747.02197 668.05603 m
S
/Cs1 SC
0 sc
0 i
-741.91803 687.05603 m
(&!)[ 8.896000 0.000000 ] xS
/Cs2 SC
0.80000001 0.80000001 0.80000001 sc
CM
78.542 100.94395 m
106.542 100.94395 l
106.542 72.943947 l
78.542 72.943947 l
h
78.542 100.94395 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1238 804 cm
-1159.458 703.05603 m
-1131.458 703.05603 l
-1131.458 731.05603 l
-1159.458 731.05603 l
h
-1159.458 703.05603 m
S
/Cs1 SC
0 sc
0 i
-1149.906 722.05603 m
(&)s
/Cs2 SC
0.80000001 0.80000001 0.80000001 sc
CM
78.542 65.943947 m
106.542 65.943947 l
106.542 37.943943 l
78.542 37.943943 l
h
78.542 65.943947 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1238 804 cm
-1159.458 738.05603 m
-1131.458 738.05603 l
-1131.458 766.05603 l
-1159.458 766.05603 l
h
-1159.458 738.05603 m
S
/Cs1 SC
0 sc
0 i
-1149.906 757.05603 m
(')s
/Cs2 SC
0.80000001 0.80000001 0.80000001 sc
CM
78.542 30.943943 m
106.542 30.943943 l
106.542 2.9439433 l
78.542 2.9439433 l
h
78.542 30.943943 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1238 804 cm
-1159.458 773.05603 m
-1131.458 773.05603 l
-1131.458 801.05603 l
-1159.458 801.05603 l
h
-1159.458 773.05603 m
S
/Cs1 SC
0 sc
0 i
-1149.906 792.05603 m
(\()s
/Cs2 SC
0.80000001 0.80000001 0.80000001 sc
CM
218.54201 100.94395 m
246.54201 100.94395 l
246.54201 72.943947 l
218.54201 72.943947 l
h
218.54201 100.94395 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1238 804 cm
-1019.458 703.05603 m
-991.45801 703.05603 l
-991.45801 731.05603 l
-1019.458 731.05603 l
h
-1019.458 703.05603 m
S
/Cs1 SC
0 sc
0 i
-1009.906 722.05603 m
(\))s
/Cs2 SC
0.80000001 0.80000001 0.80000001 sc
CM
358.54199 100.94395 m
386.54199 100.94395 l
386.54199 72.943947 l
358.54199 72.943947 l
h
358.54199 100.94395 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1238 804 cm
-879.45801 703.05603 m
-851.45801 703.05603 l
-851.45801 731.05603 l
-879.45801 731.05603 l
h
-879.45801 703.05603 m
S
/Cs1 SC
0 sc
0 i
-869.90601 722.05603 m
(*)s
/Cs2 SC
0.80000001 0.80000001 0.80000001 sc
CM
358.54199 65.943947 m
386.54199 65.943947 l
386.54199 37.943943 l
358.54199 37.943943 l
h
358.54199 65.943947 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1238 804 cm
-879.45801 738.05603 m
-851.45801 738.05603 l
-851.45801 766.05603 l
-879.45801 766.05603 l
h
-879.45801 738.05603 m
S
/Cs1 SC
0 sc
0 i
-874.354 757.05603 m
(&!)[ 8.896000 0.000000 ] xS
/Cs2 SC
0.80000001 0.80000001 0.80000001 sc
CM
490.978 100.94395 m
518.97803 100.94395 l
518.97803 72.943947 l
490.978 72.943947 l
h
490.978 100.94395 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1238 804 cm
-747.02197 703.05603 m
-719.02197 703.05603 l
-719.02197 731.05603 l
-747.02197 731.05603 l
h
-747.02197 703.05603 m
S
/Cs1 SC
0 sc
0 i
-741.91803 722.05603 m
(&&)[ 8.896000 0.000000 ] xS
/Cs2 SC
0.80000001 0.80000001 0.80000001 sc
CM
490.978 65.943947 m
518.97803 65.943947 l
518.97803 37.943943 l
490.978 37.943943 l
h
490.978 65.943947 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1238 804 cm
-747.02197 738.05603 m
-719.02197 738.05603 l
-719.02197 766.05603 l
-747.02197 766.05603 l
h
-747.02197 738.05603 m
S
/Cs1 SC
0 sc
0 i
-741.91803 757.05603 m
(&')[ 8.896000 0.000000 ] xS
/Cs2 SC
0.80000001 0.80000001 0.80000001 sc
CM
358.54199 30.943943 m
386.54199 30.943943 l
386.54199 2.9439433 l
358.54199 2.9439433 l
h
358.54199 30.943943 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1238 804 cm
-879.45801 773.05603 m
-851.45801 773.05603 l
-851.45801 801.05603 l
-879.45801 801.05603 l
h
-879.45801 773.05603 m
S
/Cs1 SC
0 sc
0 i
-874.354 792.05603 m
(&&)[ 8.896000 0.000000 ] xS
/Cs2 SC
0.80000001 0.80000001 0.80000001 sc
CM
490.978 30.943943 m
518.97803 30.943943 l
518.97803 2.9439433 l
490.978 2.9439433 l
h
490.978 30.943943 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 1238 804 cm
-747.02197 773.05603 m
-719.02197 773.05603 l
-719.02197 801.05603 l
-747.02197 801.05603 l
h
-747.02197 773.05603 m
S
/Cs1 SC
0 sc
0 i
-741.91803 792.05603 m
(&\()[ 8.896000 0.000000 ] xS
/Cs2 SC
1 0.14913 0 sc
/F2.1[ 19 0 0 -19 0 0]sf
-1203.458 688.86359 m
(!)s
/F1.1[ 16 0 0 -16 0 0]sf
-1233 640.55603 m
(+,-./0123)[ 9.184000 8.896000 5.040000 8.592000 8.592000 9.488000 4.448000 4.144000 0.000000 ] xS
/F2.1[ 19 0 0 -19 0 0]sf
-1203.458 723.95984 m
(")s
-1203.458 759.05603 m
(#)s
-1203.458 793.05603 m
($)s
0.60000002 i
1 0.149131 0 sc
-1198.676 643.94708 m
-1198.676 664.04712 l
S
0 i
CM
39.324001 134.9529 m
42.324001 142.9529 l
39.324001 139.9529 l
39.324001 139.9529 l
36.324001 142.9529 l
h
39.324001 134.9529 m
f
0 J
0 j
1 0 0 -1 1238 804 cm
-1198.676 669.04712 m
-1195.676 661.04712 l
-1198.676 664.04712 l
-1198.676 664.04712 l
-1201.676 661.04712 l
h
-1198.676 669.04712 m
S
1 J
1 j
0.60000002 i
0 0 0 sc
-1124.458 668.05603 m
-1096.458 668.05603 l
-1096.458 696.05603 l
-1124.458 696.05603 l
h
-1124.458 668.05603 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 16 0 0 -16 0 0]sf
-1114.906 687.05603 m
(&)s
0.60000002 i
/Cs2 SC
0 0 0 sc
-1124.458 703.05603 m
-1096.458 703.05603 l
-1096.458 731.05603 l
-1124.458 731.05603 l
h
-1124.458 703.05603 m
S
/Cs1 SC
0 sc
0 i
-1114.906 722.05603 m
(')s
0.60000002 i
/Cs2 SC
0 0 0 sc
-1124.458 738.05603 m
-1096.458 738.05603 l
-1096.458 766.05603 l
-1124.458 766.05603 l
h
-1124.458 738.05603 m
S
/Cs1 SC
0 sc
0 i
-1114.906 757.05603 m
(\()s
0.60000002 i
/Cs2 SC
0 0 0 sc
-1124.458 773.05603 m
-1096.458 773.05603 l
-1096.458 801.05603 l
-1124.458 801.05603 l
h
-1124.458 773.05603 m
S
/Cs1 SC
0 sc
0 i
-1114.906 792.05603 m
(#)s
0.60000002 i
/Cs2 SC
0 0 0 sc
-1089.458 668.05603 m
-1061.458 668.05603 l
-1061.458 696.05603 l
-1089.458 696.05603 l
h
-1089.458 668.05603 m
S
/Cs1 SC
0 sc
0 i
-1079.906 687.05603 m
(')s
0.60000002 i
/Cs2 SC
0 0 0 sc
-1089.458 703.05603 m
-1061.458 703.05603 l
-1061.458 731.05603 l
-1089.458 731.05603 l
h
-1089.458 703.05603 m
S
/Cs1 SC
0 sc
0 i
-1079.906 722.05603 m
(\()s
0.60000002 i
/Cs2 SC
0 0 0 sc
-1089.458 738.05603 m
-1061.458 738.05603 l
-1061.458 766.05603 l
-1089.458 766.05603 l
h
-1089.458 738.05603 m
S
/Cs1 SC
0 sc
0 i
-1079.906 757.05603 m
(#)s
0.60000002 i
/Cs2 SC
0 0 0 sc
-1089.458 773.05603 m
-1061.458 773.05603 l
-1061.458 801.05603 l
-1089.458 801.05603 l
h
-1089.458 773.05603 m
S
/Cs1 SC
0 sc
0 i
-1079.906 792.05603 m
(\))s
0.60000002 i
/Cs2 SC
0 0 0 sc
-1054.458 668.05603 m
-1026.458 668.05603 l
-1026.458 696.05603 l
-1054.458 696.05603 l
h
-1054.458 668.05603 m
S
/Cs1 SC
0 sc
0 i
-1044.906 687.05603 m
(\()s
0.60000002 i
/Cs2 SC
0 0 0 sc
-1054.458 703.05603 m
-1026.458 703.05603 l
-1026.458 731.05603 l
-1054.458 731.05603 l
h
-1054.458 703.05603 m
S
/Cs1 SC
0 sc
0 i
-1044.906 722.05603 m
(#)s
0.60000002 i
/Cs2 SC
0 0 0 sc
-1054.458 738.05603 m
-1026.458 738.05603 l
-1026.458 766.05603 l
-1054.458 766.05603 l
h
-1054.458 738.05603 m
S
/Cs1 SC
0 sc
0 i
-1044.906 757.05603 m
(\))s
0.60000002 i
/Cs2 SC
0 0 0 sc
-1054.458 773.05603 m
-1026.458 773.05603 l
-1026.458 801.05603 l
-1054.458 801.05603 l
h
-1054.458 773.05603 m
S
/Cs1 SC
0 sc
0 i
-1044.906 792.05603 m
($)s
0.60000002 i
/Cs2 SC
0 0 0 sc
-984.45801 703.05603 m
-956.45801 703.05603 l
-956.45801 731.05603 l
-984.45801 731.05603 l
h
-984.45801 703.05603 m
S
/Cs1 SC
0 sc
0 i
-974.90601 722.05603 m
($)s
0.60000002 i
/Cs2 SC
0 0 0 sc
-984.45801 738.05603 m
-956.45801 738.05603 l
-956.45801 766.05603 l
-984.45801 766.05603 l
h
-984.45801 738.05603 m
S
/Cs1 SC
0 sc
0 i
-974.90601 757.05603 m
(%)s
0.60000002 i
/Cs2 SC
0 0 0 sc
-984.45801 668.05603 m
-956.45801 668.05603 l
-956.45801 696.05603 l
-984.45801 696.05603 l
h
-984.45801 668.05603 m
S
/Cs1 SC
0 sc
0 i
-974.90601 687.05603 m
(\))s
0.60000002 i
/Cs2 SC
0 0 0 sc
-984.45801 773.05603 m
-956.45801 773.05603 l
-956.45801 801.05603 l
-984.45801 801.05603 l
h
-984.45801 773.05603 m
S
/Cs1 SC
0 sc
0 i
-974.90601 792.05603 m
(")s
0.60000002 i
/Cs2 SC
0 0 0 sc
-949.45801 668.05603 m
-921.45801 668.05603 l
-921.45801 696.05603 l
-949.45801 696.05603 l
h
-949.45801 668.05603 m
S
/Cs1 SC
0 sc
0 i
-939.90601 687.05603 m
($)s
0.60000002 i
/Cs2 SC
0 0 0 sc
-949.45801 703.05603 m
-921.45801 703.05603 l
-921.45801 731.05603 l
-949.45801 731.05603 l
h
-949.45801 703.05603 m
S
/Cs1 SC
0 sc
0 i
-939.90601 722.05603 m
(%)s
0.60000002 i
/Cs2 SC
0 0 0 sc
-949.45801 738.05603 m
-921.45801 738.05603 l
-921.45801 766.05603 l
-949.45801 766.05603 l
h
-949.45801 738.05603 m
S
/Cs1 SC
0 sc
0 i
-939.90601 757.05603 m
(")s
0.60000002 i
/Cs2 SC
0 0 0 sc
-949.45801 773.05603 m
-921.45801 773.05603 l
-921.45801 801.05603 l
-949.45801 801.05603 l
h
-949.45801 773.05603 m
S
/Cs1 SC
0 sc
0 i
-939.90601 792.05603 m
(*)s
0.60000002 i
/Cs2 SC
0 0 0 sc
-914.45801 668.05603 m
-886.45801 668.05603 l
-886.45801 696.05603 l
-914.45801 696.05603 l
h
-914.45801 668.05603 m
S
/Cs1 SC
0 sc
0 i
-904.90601 687.05603 m
(%)s
0.60000002 i
/Cs2 SC
0 0 0 sc
-914.45801 703.05603 m
-886.45801 703.05603 l
-886.45801 731.05603 l
-914.45801 731.05603 l
h
-914.45801 703.05603 m
S
/Cs1 SC
0 sc
0 i
-904.90601 722.05603 m
(")s
0.60000002 i
/Cs2 SC
0 0 0 sc
-914.45801 738.05603 m
-886.45801 738.05603 l
-886.45801 766.05603 l
-914.45801 766.05603 l
h
-914.45801 738.05603 m
S
/Cs1 SC
0 sc
0 i
-904.90601 757.05603 m
(*)s
0.60000002 i
/Cs2 SC
0 0 0 sc
-914.45801 773.05603 m
-886.45801 773.05603 l
-886.45801 801.05603 l
-914.45801 801.05603 l
h
-914.45801 773.05603 m
S
/Cs1 SC
0 sc
0 i
-909.354 792.05603 m
(&!)[ 8.896000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
-813.23999 668.05603 m
-785.23999 668.05603 l
-785.23999 696.05603 l
-813.23999 696.05603 l
h
-813.23999 668.05603 m
S
/Cs1 SC
0 sc
0 i
-803.68799 687.05603 m
(*)s
0.60000002 i
/Cs2 SC
0 0 0 sc
-813.23999 703.05603 m
-785.23999 703.05603 l
-785.23999 731.05603 l
-813.23999 731.05603 l
h
-813.23999 703.05603 m
S
/Cs1 SC
0 sc
0 i
-808.13599 722.05603 m
(&!)[ 8.896000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
-813.23999 738.05603 m
-785.23999 738.05603 l
-785.23999 766.05603 l
-813.23999 766.05603 l
h
-813.23999 738.05603 m
S
/Cs1 SC
0 sc
0 i
-808.13599 757.05603 m
(&&)[ 8.896000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
-813.23999 773.05603 m
-785.23999 773.05603 l
-785.23999 801.05603 l
-813.23999 801.05603 l
h
-813.23999 773.05603 m
S
/Cs1 SC
0 sc
0 i
-808.13599 792.05603 m
(&')[ 8.896000 0.000000 ] xS
/Cs2 SC
0 0 0 sc
CM
93.708328 139.64861 m
93.708328 140.06796 93.02327 152.2997 111.29816 153.43033 c
129.573 154.56105 156.95459 152.23134 159.73457 154.74782 c
162.51468 157.26448 161.81973 160.20041 161.81973 160.20041 c
161.81973 160.20041 162.45276 154.61115 157.71246 153.74413 c
152.97244 152.87701 120.54833 153.9444 107.3431 151.84737 c
94.137733 149.75012 93.708328 139.22911 93.708328 139.64861 c
h
93.708328 139.64861 m
f
0.5 w
0.60000002 i
1 0 0 -1 1238 804 cm
-1144.2916 664.35138 m
-1144.2916 663.93207 -1144.9767 651.70032 -1126.7018 650.5697 c
-1108.427 649.43896 -1081.0454 651.76868 -1078.2654 649.2522 c
-1075.4854 646.73553 -1076.1803 643.79962 -1076.1803 643.79962 c
-1076.1803 643.79962 -1075.5472 649.38885 -1080.2875 650.25586 c
-1085.0276 651.12299 -1117.4517 650.0556 -1130.6569 652.15265 c
-1143.8623 654.24988 -1144.2916 664.77087 -1144.2916 664.35138 c
h
-1144.2916 664.35138 m
S
0 i
CM
230.21562 139.64861 m
230.21562 140.06796 230.90067 152.2997 212.62578 153.43033 c
194.35094 154.56105 166.96936 152.23134 164.18938 154.74782 c
161.40926 157.26448 162.1042 160.20041 162.1042 160.20041 c
162.1042 160.20041 161.47118 154.61115 166.21147 153.74413 c
170.95149 152.87701 203.37561 153.9444 216.58084 151.84737 c
229.78621 149.75012 230.21562 139.22911 230.21562 139.64861 c
h
230.21562 139.64861 m
f
0.60000002 i
1 0 0 -1 1238 804 cm
-1007.7844 664.35138 m
-1007.7844 663.93207 -1007.0993 651.70032 -1025.3743 650.5697 c
-1043.649 649.43896 -1071.0306 651.76868 -1073.8107 649.2522 c
-1076.5907 646.73553 -1075.8958 643.79962 -1075.8958 643.79962 c
-1075.8958 643.79962 -1076.5288 649.38885 -1071.7886 650.25586 c
-1067.0485 651.12299 -1034.6244 650.0556 -1021.4192 652.15265 c
-1008.2138 654.24988 -1007.7844 664.77087 -1007.7844 664.35138 c
h
-1007.7844 664.35138 m
S
/Cs1 SC
0 sc
0 i
/F2.1[ 16 0 0 -16 0 0]sf
-1079.906 637.43353 m
(%)s
/Cs2 SC
0 0 0 sc
CM
374.69763 138.79559 m
374.69763 139.21495 374.04398 151.44669 391.48166 152.57732 c
408.91928 153.70805 435.04648 151.37833 437.6991 153.89481 c
440.35187 156.41147 439.68875 159.3474 439.68875 159.3474 c
439.68875 159.3474 440.29279 153.75815 435.76965 152.89113 c
431.24677 152.024 400.30804 153.0914 387.70779 150.99435 c
375.10736 148.89711 374.69763 138.3761 374.69763 138.79559 c
h
374.69763 138.79559 m
f
0.60000002 i
1 0 0 -1 1238 804 cm
-863.30237 665.20441 m
-863.30237 664.78503 -863.95605 652.55334 -846.51837 651.42267 c
-829.08069 650.29193 -802.95355 652.62164 -800.3009 650.10516 c
-797.64813 647.5885 -798.31128 644.65259 -798.31128 644.65259 c
-798.31128 644.65259 -797.70721 650.24188 -802.23035 651.10889 c
-806.75323 651.97601 -837.69196 650.90863 -850.29224 653.00562 c
-862.89264 655.10291 -863.30237 665.6239 -863.30237 665.20441 c
h
-863.30237 665.20441 m
S
0 i
CM
504.95129 138.79559 m
504.95129 139.21495 505.60495 151.44669 488.16727 152.57732 c
470.72964 153.70805 444.60245 151.37833 441.94983 153.89481 c
439.29706 156.41147 439.96017 159.3474 439.96017 159.3474 c
439.96017 159.3474 439.35614 153.75815 443.87927 152.89113 c
448.40216 152.024 479.34085 153.0914 491.94113 150.99435 c
504.54156 148.89711 504.95129 138.3761 504.95129 138.79559 c
h
504.95129 138.79559 m
f
0.60000002 i
1 0 0 -1 1238 804 cm
-733.04871 665.20441 m
-733.04871 664.78503 -732.39502 652.55334 -749.83276 651.42267 c
-767.27039 650.29193 -793.39752 652.62164 -796.05017 650.10516 c
-798.70294 647.5885 -798.03979 644.65259 -798.03979 644.65259 c
-798.03979 644.65259 -798.64386 650.24188 -794.12073 651.10889 c
-789.59784 651.97601 -758.65912 650.90863 -746.05884 653.00562 c
-733.45844 655.10291 -733.04871 665.6239 -733.04871 665.20441 c
h
-733.04871 665.20441 m
S
/Cs1 SC
0 sc
0 i
-803.68799 639.95453 m
($)s
/Cs2 SC
0 0 0 sc
CM
234.84364 139.64861 m
234.84364 140.06796 234.16618 152.2997 252.2384 153.43033 c
270.31058 154.56105 297.38849 152.23134 300.13763 154.74782 c
302.88693 157.26448 302.19968 160.20041 302.19968 160.20041 c
302.19968 160.20041 302.82568 154.61115 298.13797 153.74413 c
293.4505 152.87701 261.38599 153.9444 248.32721 151.84737 c
235.26828 149.75012 234.84364 139.22911 234.84364 139.64861 c
h
234.84364 139.64861 m
f
0.60000002 i
1 0 0 -1 1238 804 cm
-1003.1564 664.35138 m
-1003.1564 663.93207 -1003.8338 651.70032 -985.7616 650.5697 c
-967.68945 649.43896 -940.61151 651.76868 -937.86237 649.2522 c
-935.1131 646.73553 -935.80029 643.79962 -935.80029 643.79962 c
-935.80029 643.79962 -935.17432 649.38885 -939.86206 650.25586 c
-944.5495 651.12299 -976.61401 650.0556 -989.67279 652.15265 c
-1002.7317 654.24988 -1003.1564 664.77087 -1003.1564 664.35138 c
h
-1003.1564 664.35138 m
S
0 i
CM
369.83704 139.64861 m
369.83704 140.06796 370.5145 152.2997 352.44226 153.43033 c
334.37012 154.56105 307.29218 152.23134 304.54303 154.74782 c
301.79376 157.26448 302.48099 160.20041 302.48099 160.20041 c
302.48099 160.20041 301.85498 154.61115 306.54269 153.74413 c
311.23016 152.87701 343.29468 153.9444 356.35345 151.84737 c
369.41238 149.75012 369.83704 139.22911 369.83704 139.64861 c
h
369.83704 139.64861 m
f
0.60000002 i
1 0 0 -1 1238 804 cm
-868.16296 664.35138 m
-868.16296 663.93207 -867.48553 651.70032 -885.55774 650.5697 c
-903.62988 649.43896 -930.70782 651.76868 -933.45697 649.2522 c
-936.20624 646.73553 -935.51898 643.79962 -935.51898 643.79962 c
-935.51898 643.79962 -936.14502 649.38885 -931.45728 650.25586 c
-926.76984 651.12299 -894.70532 650.0556 -881.64655 652.15265 c
-868.58759 654.24988 -868.16296 664.77087 -868.16296 664.35138 c
h
-868.16296 664.35138 m
S
/Cs1 SC
0 sc
0 i
-940.90173 639.95453 m
(%)s
2 w
0.60000002 i
/Cs2 SC
1 0.57637203 0 sc
-850.2113 716.82745 m
-820.2536 690.74097 l
S
0 i
CM
422.2713 117.19923 m
412.66733 113.60987 l
417.74637 113.25903 l
417.74637 113.25903 l
417.39554 108.17997 l
h
422.2713 117.19923 m
f
0 J
0 j
1 0 0 -1 1238 804 cm
-815.7287 686.80078 m
-825.3327 690.39014 l
-820.2536 690.74097 l
-820.2536 690.74097 l
-820.60443 695.82001 l
h
-815.7287 686.80078 m
S
1 J
1 j
0.60000002 i
-748.26868 683.64355 m
-778.2713 710.15826 l
S
0 i
CM
455.23276 89.868454 m
464.81018 93.528107 l
459.72867 93.841705 l
459.72867 93.841705 l
460.04227 98.92321 l
h
455.23276 89.868454 m
f
0 J
0 j
1 0 0 -1 1238 804 cm
-782.76727 714.13153 m
-773.18982 710.47192 l
-778.2713 710.15826 l
-778.2713 710.15826 l
-777.9577 705.07678 l
h
-782.76727 714.13153 m
S
1 J
1 j
0.60000002 i
-850.2113 787.95459 m
-819.96039 759.01721 l
S
0 i
CM
422.37534 49.130226 m
412.94971 45.09573 l
418.03961 44.982769 l
418.03961 44.982769 l
417.92667 39.892853 l
h
422.37534 49.130226 m
f
0 J
0 j
1 0 0 -1 1238 804 cm
-815.62463 754.86975 m
-825.05029 758.9043 l
-819.96039 759.01721 l
-819.96039 759.01721 l
-820.07336 764.10718 l
h
-815.62463 754.86975 m
S
1 J
1 j
0.60000002 i
-747.02197 752.58868 m
-777.02466 779.10339 l
S
0 i
CM
456.47943 20.923351 m
466.05685 24.583 l
460.97534 24.896601 l
460.97534 24.896601 l
461.28894 29.978104 l
h
456.47943 20.923351 m
f
0 J
0 j
1 0 0 -1 1238 804 cm
-781.52057 783.07666 m
-771.94318 779.41699 l
-777.02466 779.10339 l
-777.02466 779.10339 l
-776.71106 774.02191 l
h
-781.52057 783.07666 m
S
ep
end
%%Trailer
%%EOF
