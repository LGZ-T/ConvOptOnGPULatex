%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 404.000000 188.000000
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 404 188
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 404 188
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: STSongti-SC-Regular
%!FontType1-1.0: STSongti-SC-Regular 1.0000.1.0000
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin/FontName /STSongti-SC-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /gid44 put
dup 34 /gid81 put
dup 35 /gid83 put
dup 36 /gid88 put
dup 37 /gid87 put
dup 38 /gid50 put
dup 39 /gid41 put
dup 40 /gid76 put
dup 41 /gid79 put
dup 42 /gid72 put
dup 43 /gid85 put
dup 44 /gid75 put
dup 45 /gid68 put
dup 46 /gid71 put
dup 47 /gid3 put
dup 48 /gid19 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -132 1 index div -787 2 index div 1015 3 index div 936 5 -1 roll div]cvx def
/sfnts [<



00>] def
/CharStrings 18 dict dup begin
/.notdef 0 def
/gid3 1 def
/gid19 2 def
/gid41 3 def
/gid44 4 def
/gid50 5 def
/gid68 6 def
/gid71 7 def
/gid72 8 def
/gid75 9 def
/gid76 10 def
/gid79 11 def
/gid81 12 def
/gid83 13 def
/gid85 14 def
/gid87 15 def
/gid88 16 def
/gid42949 17 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-132 -787 1015 936}def
/UniqueID 4455122 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91BC64A62485D7C863002D39D4194FF17CC8AA420E752C449BD1094F4BB8C06574757F39367BB6CA219EA643E5CB90D2160BFFB4B6981960883A1D019FB5A75CA41677517D8D461BD5486232B40AF36445BFB44F2EEA84F05F941E41A3643515905B2783A3EF3911D96EBC0580ABC276341D7513343161504021092BFFEDD33AC959A8334F9EA5E074A611928D59F5E99A1FC57C79DF8E8C87021DA583BF058B5A66265F1252819B151F6D370585B1D9E69F19C6FDE884BC7A491A318AC8AC621BE17645743E1A53B0B574416CBE9A83AB7AD73354144AF5C85ABBB8B0678CD2764694145903C7766E9EACB6C3F560726626488EE6CB2736AA84CE4AF5780CE9641F422AE83C499564E340E158E1622E705AC6B0A9A54463EF1BF0A809CDD1216F8B346876D581282F1566E51ED1CE9B7FD0289B012DCAB7FD948DE365E2DFB9FCFF0446C1A8247D312C2792A1F51EB58CAFFB1E364783FF8F3728926D748674F52F634CA01C49A468DEA4A5DBD7CB88B6A52CA249D6B6DD04C1A63954C54715A9F7A89BF1416287DC2D03CB74117903FF9AE3F3005FC10A174D872BDE7E2E0889C270B919A6ADCD86382DAE94A849D7D2A480AC160DB1761ECA27797CC06C4E9EB03B8E06FF889BC86EB15DDC6D7CD7DCC275651EDD5A2D2572F0C2832E3635F3092C35F70A80D9A6F67041DB3E0349F6C02C3771AFE0F30B82D197968641126456CACF71AB9484B93CA283B575804A028D423A1471239BD1335EFF18017D66E7
0B960335E0B6A810AC04C40A9EEC7C06C0D0084A34627DC5B89A9888DBFC2A8BBA9DABA37CDCC55F0D879F08EE3EE73A7EC9D912DB1738E3A1599E96907B74CA3ED53049319BCC73C01A7F989148BF2CF6D8563CA1EAC0E518F393ABE275757B42FFB729A7D209D8D33806A8F98FC13BE16DC479ED7B21370B459CB27E2C629F35C63F10FC8106321D31106D3C5FE8087652FF6D2504B26CBDF7B48FB6B60D0B74614740D2420432A7D81BA3A8F28D3D96C4A3A064287BCADD5A65471B241ADB786D2110C608C40D22F2D208F1E8EA0F63C10953F4AD5FFA831978C1BB129AC135209D016B2C340030995DD7BFED39FEA43E27C0562CE7270ED2C09808516F33FE652E31D6D9DCFA5997F9592AC903D22B519D84506CB3E0BDBC776ED72A0B24081521CBF5C179EBEEBC9320856BD961D2959A487813293F4E523767D3EAC4D943CB343166D7D12FE666D959935D5D4CDEAE5C52236C65F9458FB4DC6E5241FB51299DAD722E3F3FD0666699D633BFBB431723F6122204A5319FAB5CF76E75CB2A1FCE1E679331A3B3DD2E9C7B610543925F9932577C22E4683A068FAA9522B12E7CF70C18DE9364A2A55D37FDC55563216789BA1553324465B5361AD9BC7E63C57A2D4E9F3B9E051A7793A0BE746CA600F9C07E7C57C5ABCF2EA122EB622AD64EBB7CBC4A940F2D35C103FFB3B3CD8FBDA4984709B21030FEEE62D3A14BD2E347FE961322F248A27EBFC9FD59C65FBA9028E552B8D38635F4D247720EDCF37275A55F4AA9A9F783A77407755F0A503AFB73B87F78D883AAFCCBB6D94FC217F5CDAD3BE38105A7D3291B415EEF76D5AD189FB2043484A6ADCC5532FBA808D3786306751E315646D94CC203F411D53A85D214ACC332D0984C61CEF00351A5F3AD6786F79CC19BF90BB13DA5BB3077D4EB6E506C1F8034CC58B914E585B4BCE2B7BBF1364D5E9C9ECB1003C0CA1D1DB4C8342AD004E9B04EAE2DB737CD95AE0A13DE113A8B1B32E1E8AEF7B6F62E92BE2795590EA9FB1495CBDF71C9159DC14C3AC16DD1EBC84BC6C1284AA59EBE462FC75437ADF31BAFC019DC21BD2276070BFDF0B6F5850CC188D78BF6C771D0BB7AB32BF7C83BE764BD65A55B8BDD36DCC1AFEA6B4580D32AC9950BBA4272D96B0CCBC0DB0D4C9134CB2ED4E77F59B932417FF26351A39BC3C08BBF9326500D9EE96E7940D0FFA36B9E74D9103029792D0DE48122A7ED8673AF663396F7DE475395A7CC4DE2BC5626F5B5A110D13FEC43C7E36B180F7F0C5BBAB6C723B5C72A824EF05E89DA1C743BDD9D61934B1E7D53360BA12FB4D111CE1014CAC92F2E3B4AEBBE0BBBDE7CC0C96A57AAE40DD2C364E7642C0FFCC7388CA0EDFC820C9585DAE64E56978A8268C371AF67325C3256DA47D14DB6FE7ED810F5FBC17E9F602E45CC1C808A7F279B46A155F73DAA31FBB0E1E9

E5B00644C01123E6F2EF3692D85CC6C67FFC8AD0E0BBDC8EFBE6D2833A89C4A1ECDF47E807A595DED610882F6C13F2A20950A77F054E8E9A51AB29C29BC292C0DEA4EACDBC77C89B21A5D3393BB3F513EDE9A7AC3A0E8E61810499E188763B7D7F7CBD6552D130234C7AF9DDDA38AF9BB04EDA2994E542EB05F89B5E24781018E331960503728A2C0EB3CFDDAB54EAC18CB8C20FA119755BB4212C3286421A7A39F9A3BDC073C8350B86DA945A98385057FE2170C629093A3DD0DBDE6A7E6E6CCC79E8860113935F4FAFF8611ADBADA9E945B4089FDD08BF13C364EC10BF79A6A7880D260F96EDFB70CC898400E1787CEF350C280E57798B8FFB67EE321DADA74688BBF8F1E6739DE08C1A14A250898ED38939435D2819366474AE0BE99E3A35852525AB26512E787FF2904AE0CC051AB312EC8E40794B667B8BE623AFBBBCD81C6B1685B8D1C830652BAB04ED996A62EA1478B1789DE582421E6761DEF6AE03E7A1C620FAFA0DD4C6300064C983BA2AAF32794588C298F4DFAEEF9C9DF4AB8DE7BE44FCDB241D4214B4EE149D1B21A8EEA8F06CFCF79CE3F0DA26EFDE9A0046748DF69A78C857FBBB71EA76030A4AAD1E738D7B6EECF76E181A61D8C147CB6B0A926EC3A216AE4B4E4E6AFFDD21EDA7EAFF703A801D5AAED1E604BDB81C56D13EB6FB088BE337C71253D625C02D71CD3AC6112A84C1E811B7DF931AFE1F48ABE9DB88B13B10683D729FD5E8EA2DD3A8FD8C9A6D85F3BB3D18136B6913BD91F48151241E9C38F9616B751E06BEE74CDEFE19509BC7A38F260EA935C084F9568491138DD887A10EBA712E7FEDF80245892D14585D253582095E31F145CE1A47B1C4F89B9FBD6487D6A41FC1D246B5F60BEF447EBFB60B4588B40AE3FBB2AB1D3C836581941D72840799596878FDB96288D1905E5DAFA131A750FF2CF79D38BE095DBB333ABDF90C3C0C44A2CE34D13BA596044BA06ECA9C4B887AE4BE646CDEA1D15E0BF267E491FC9E7C14313C69714228170D9611DD40D34BE654010A13BE1EE4A231421982FDF9B527F08676F779F63702EDB4CB4024C14C9FB58822AC934CA986F5FFF96A2D364D07E98D136E73FBB0292CD894447F4F5A20782F646906ABEA9BE73E3BA29FC9BAE133C489C9C6BC78BAF846B54D34740ACD735ABB578EEE6F5663683E32EEDDBE25B319F1CEE9CA83DA94C2CD30B2944A329E07323BBE816B3EBD3B50A61A9BF8D81A87C2F23056436B6DDA91F0BCF006441FD7BBBFF0517E91385BBCEF75F864C68BDC2E4946D5449D6D04434FC5830FCA352659D21FF238B5703103707090C76BC7530C8112DAF8AD02BB65FDA2D59FCE9135B8504E8FCC03FEF9AA67B002D288BBC69334736BEE142CA96E5286DD695E017CE06E94E68F32298D533BEA3129D45F88442E075FD159A6186C6BAA958D5899C6A8276AF8
ABAE00B9458ABBC7C3450D67AB6152862E96ACB74E8A152184990595C05D494BB631E9D35593FA53D8D5B2137BDDA11AF037141B12DE23727AA26EAA63F61C2760EA4DA7ECDDA1A70667649CDC8BC574C9D76E8C4EB2A33983E8909E60FDDAC407B5C5CBEBB7FBDDE2126317039F6CFEE76E7839378868877380352706BFC98B79F29B3E6DA3E37E8B7B5F63CDC21D32F2032B097EDFBD3B0FEF075EA850654DEA0D91E99B6025C8B441F8E93E369C0F76E170C80BAFEBDFDA6759ADF85171947572E92F014E2A6D2C5CD01C00AA8B07FBC64F783AE0E5E5DA210EC5618B50A3F801A636F7D8E9FD7BE21C86D5165D0A685B3D342FB842CD1E54CFF64BB3602745522C158748983CB97BE788
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/STSongti-SC-Regular cguidfix
/F1.1/STSongti-SC-Regular renmfont
%RBIBeginFontSubset: TimesNewRomanPS-ItalicMT
%!FontType1-1.0: TimesNewRomanPS-ItalicMT 1.0000.5.0000
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin/FontName /TimesNewRomanPS-ItalicMT def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /r put
dup 34 /o put
dup 35 /w put
dup 36 /i put
dup 37 /zero put
dup 38 /two put
dup 39 /three put
dup 40 /four put
dup 41 /one put
dup 42 /f put
dup 43 /u put
dup 44 /t put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1019 1 index div -628 2 index div 2770 3 index div 2096 5 -1 roll div]cvx def
/sfnts [<







021235314731543C6A1679157A16AC15C500FA1509552E543B6A09034B1554005A150336003C15022128293902AB090139263F284F285F28F515F616F53907143B3C3C13090A262738393A16170533153C1326271B3D2E33331F1B20141B1B202B073C00060003031F133C1413133C180E0B1B133D28201B3C13100A8A096003B80203401B3CAD134043351340181934134015351F134F135F138F139F130513B80234400C33251B402E012E252095121BB8FFC0B23A351BB8FFC0B31819341BB8FFC0B31415341BB8FFC0B32C34341BB8FFC04019232834301B401BA01B031B193D091B1713171B133D0A77C3182B2B103C3C2B2B2B4E10F45D2B2B2B2B2B435C58B51B4023123F1BB8FFC0B3120B3F1BB8FFC0B116392B2B2B59014DF4ED5D10EDF45D2B2B2BE4EDF4ED2B103C103C2B10C0C0003F3C870E2E2B057D10C400183F3C3F870E2E2B0E7D10C4011112393911123912173910C910C9870E103CC43130005D01715D5D5D5D5D435C58401815180B3915180C3900220C393B220C3930220C391E220C392B2B2B2B2B2B59015D01030615141633323637170607062322263534373637020623222635343713363534262322060727363736333216151407030615141633323E02373703C4AE270D0B1129531E4F533733272C0D104BAAE5622E402C5720110A152A4A1F4B544036252F285E271915216AB17341160371FDAC852312111F6C177D3B262C2322384AF8FEE9D440314B9B01356F1B0C111E601674372B2F25368BFEBD8423131742E3C7D94C0000010023FFE8054B0389002B016F400B1815191B020815091B022AB8FFDE40270C0D3E571A532A651A602AE01A052A152F1B3C16481B5F1B5C2A6E1B6C1F692BA527B42B0B122DB8FFC0B3303A342DB8FFC0B22E352DB8FFC0B22A352DB8FFC0B21F352DB8FFC0B31E3A342DB8FFC04030171C341A2AC901011800228A25C62B26260E0E00071C1B1B1919180B02030405060511191B2B1A1C1F0B2F0B3F0B030BB8019FB505820F110111B80337400C01E5198A18821A2B8A00E51AB8028E400A1B8A1C254F245F240224B8032FB22AE51CB8FFC0B328143F1CB8FFC0B22B351CB8FFC0400F2E36341C402135301C401C501C031CBA0323002C0338B1DE182B10F65D2B2B2B2BEDF65D3C10EDFDFDED10FDFDEDFD5DFDE45D1112393911121739003F3C103C103C3F3C103C103CF4ED191112392FE4182FB10602435458400B0C011C012C01261B2C2A05005D593130012B2B2B2B2B2B435C58B41B220C3917B8FFDEB2113918B8FFDEB511391A220F392B2B2B2B595D005D2B015D5D01133637363534272E02353436333216151407060706020723030123022726272623220735251613161701035A45AE683D0A0437162E2429390F1E576AE1372541FE632C07240F2319331D2D01



5973732B2B451869442B2B752B2B4518694475752B2B752B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B74752B2B2B2B2B451869442B002B732B2B2B2B2B2B2B2B2B012B2B2B007373732B2B2B01435C58B8FFDEB31E1C3318B8037FB52B3318262B33B9FFF00381B112332B2B2B2B590173742B2B2B002B73752B2B732B2B2B2B2B73752B2B2B2B732B000000
00>] def
/CharStrings 15 dict dup begin
/.notdef 0 def
/zero 1 def
/one 2 def
/two 3 def
/three 4 def
/four 5 def
/f 6 def
/i 7 def
/o 8 def
/r 9 def
/t 10 def
/u 11 def
/w 12 def
/acute 13 def
/glyph2498 14 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1019 -628 2770 2096}def
/UniqueID 4451677 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C55AC8266BDD340E521355EEF85826934CAE0E7556D6E9ABDD725F285293DB63BA7DF3BD195A139217068D4B46C2E21B8F600320070E22CBBE7B2030BC830250C447E71B11C5AA51E85E75350A3C46D71DEAA8349F57992903CDEFEB8E36CF653B9DB9B1BE403CF6AECFDD2FECDE5C195DD50C6FAF8CFE1B0765C911D18D39A1F455A26E2FFBC5921E2E231A8B3F34F153805B4A0A6D966CE41DF99560CC565DEB98C2B47E25D1A805045E1486E4757CE7424238071EE95C49AE82E5092B14651509E83BD1FAEB2F403C96B93ADE98A48ED04EC5B945CB7B0BEBB0C91CB21A078F251324380275E14FD567AE774C7414145CFBC5B15561658B3B8FAE0DE8722259484AC56B342021C035609489AC2C014663B0A19EA85DB77F70A0ADB4CB96D561DCE659ED40A9217BD2E60BB002CDEC210C402FC2FD3AB935CB9A03FC32A1D8120D9721B9E30757E1595F014D52418FE962E3EFA092E2C4D19BF3F957F8D762444CB42EF9612FA02BFC2A87E3777441BD72F6C9132E2492FFA4DFF3B70B63729827512947B6F8A0A6123E79D77BD707A2C0849FC3256B0584D1458458B6C1A5DBAD45B3DB333C4E3722C8A4C3F6E3B523C1F61F11382E102CCFFFDDB43358E13DA40610D90BBA1B2744263A3C77A1554ADE5C6BFD2D39CDA7A5568D81E8D5A1188954EB6A1E60295AB4D1D361D371B485B2483CEFBDD372E31020B1BB979A161E96272D6A4D7E32C409C6D9366A890A8AE999C0ED580756B672C50D9314224EF27260406FD4E16927DA174B324CB0E1E14F304B410514960FDF9AFEDCE59DEC57DD0FD2

EFA428723A04DB8C23D60471249DA53F55E7D816CF1DBF6F2E9ED7FA29F642C4AD68EB54995B4514E8A95FCFC6DEAB3910F7E8D84E4AC8D325079B329BC72B176B2065E1A821987754BA41E661CA7A3CFB96F59C0DB89B3BE12E8FDF2F854B2959E91F1EDD3E9A4CE80B9963ABCC5C80EF3FC32574532A60DC006C1E35B5A1EACD9A9C1721B0C2C150BB8E089DCD37CACC4A0EEBC53A27E32C232A98EC411BFCB9C88FF737B74C4D6F8535ABE4A76841F8809DDE61D268AE98832CA4B35196D360E69E3FEE49ED1ED481AF8AB49A8BC85A26736D712047C5A9A3B315A74D00CA2E9ACD53F439AD0B6768629400052B89FB8BF43FA55449B8E0A97EF0806CB9C8E86C034F8EF34D8E1E9E509E53A8B038C0E39AAF49D8B0C50A2A6F7EF3E7DBBF60B3E8C19FCAD19F835B8D824204A626E12A9DC752A3BE88D881A49588EA2443C1A99FB2B3F7A5F4983B178741DEBF2D409D326C8358DB4088EF01940097DCD19EA693A719A887F8A1CAEB31C0439991A01C689FB787562EA87675F56551DDE7138AE84742BBBA7559994E96BB70440090D463AE97CF01D592ABEFE0C56E6AC8105E1B2D2BC9A51EA64D171C0CB07477394817146BAC7C2173AC857FAEEA1CAB45293495B98A2984F1008E648222DFEF2A053D35B54E3CED643FC5CBDACC76F9AD06E3B1A6FC5278D00C6B5E72AC184FDD0AC28169D8892E16D5FB3339AC249E866CF090E23475B556DDC0217B5D9844B6014CA9293CEC23FEF699780CA07F990A86D448327AB9380B6CD606643C53BB0C5C9CAF8902131BFC671933B66187F5F0657136FB935E862E447A710ACEDA0571AD3FB2B91FCF5CE77F34DD7CFDADFD8B7D53D957465ECA93F54671A7EA0A7E4E2019012A045F3801C8B45F4C2644F275A24A95B59B9B4DDA4F6C9D80DBA249ACBB8A727A90006056D5D218DC54AF80CA42E7E5A1D8838F61D0F4DE5D56FE91194947B9BB4BE6999D4ACCD398BD22DB2B17449B15183536772868BAF1C1B57903517F146B15F991C5163A36E56E170A862E22933C2BF570B4C64539A1445742CE2EAA9DA139F6C7A40914271D16C0F79D4108AFC8A934B8CF8C04086040EE7E454AAB0893F80A90B854D4349529A3C8DD3E0B9384730E84B6622C0F1C2C3BA26A3379AA4A70D6B3C8AA226EE79E690F3C7948FB0028ADFADFF831EA34485CF87B97D558E90B46C0713F11F1455D42C4DC5D17106E5639BF649457FE9056ACD6376B486C8B65543765061DEAC621F983A9D692E493D0189240AFD6C9AF409C66DFAA7F4C15738081737043F4BF69CB6124D093BAA6BD82479375C1196859EC3B0F2A106EF483A5475451E547C38ABE247B64825F9DDF6E020A5B20462F52A9B8D08DCDF1B1088C6E18182C031D02383267E3D51993DD9DF8A9E6B2BE753F2C2B38E466A59E0EDCC40B16924B0D1D94B0
47D2072BF90733E5FFB8B526C7053D3F8A5FF642E7269AE48287792A72F9C09E476755062590DAEA34440A1BBAE97751B8B0A18C8C5F617A55C5FF1994DAFC801A4BDEB0A12EB9422474B2492884B72EA9F1CC19E9F0D4EEDE6E1DC82C62ECE63DE4A88DBB20EC402AF8D822DA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/TimesNewRomanPS-ItalicMT cguidfix
/F2.1/TimesNewRomanPS-ItalicMT renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 404 188 rc
0 188 m
404 188 l
404 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-1253.9457 4089.5737 m
3825.8992 4089.5737 l
3825.8992 -2214.3022 l
-1253.9457 -2214.3022 l
h
-1253.9457 4089.5737 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 2486 4031 cm
-2426.2346 3849.1497 m
-2401.2346 3849.1497 l
-2401.2346 3874.1497 l
-2426.2346 3874.1497 l
h
-2426.2346 3849.1497 m
S
[
4
4
] 0 d
1 0.149131 0 sc
-2428.2432 3846.0051 m
-2335.585 3846.0051 l
-2335.585 3938.3818 l
-2428.2432 3938.3818 l
h
-2428.2432 3846.0051 m
S
[] 0 d
0 0 0 sc
-2395.2346 3849.1497 m
-2370.2346 3849.1497 l
-2370.2346 3874.1497 l
-2395.2346 3874.1497 l
h
-2395.2346 3849.1497 m
S
-2364.2346 3849.1497 m
-2339.2346 3849.1497 l
-2339.2346 3874.1497 l
-2364.2346 3874.1497 l
h
-2364.2346 3849.1497 m
S
-2426.2346 3880.1709 m
-2401.2346 3880.1709 l
-2401.2346 3905.1709 l
-2426.2346 3905.1709 l
h
-2426.2346 3880.1709 m
S
-2395.2346 3880.1709 m
-2370.2346 3880.1709 l
-2370.2346 3905.1709 l
-2395.2346 3905.1709 l
h
-2395.2346 3880.1709 m
S
-2364.2346 3880.1709 m
-2339.2346 3880.1709 l
-2339.2346 3905.1709 l
-2364.2346 3905.1709 l
h
-2364.2346 3880.1709 m
S
-2426.2346 3911.1921 m
-2401.2346 3911.1921 l
-2401.2346 3936.1921 l
-2426.2346 3936.1921 l
h
-2426.2346 3911.1921 m
S
-2395.2346 3911.1921 m
-2370.2346 3911.1921 l
-2370.2346 3936.1921 l
-2395.2346 3936.1921 l
h
-2395.2346 3911.1921 m
S
-2364.2346 3911.1921 m
-2339.2346 3911.1921 l
-2339.2346 3936.1921 l
-2364.2346 3936.1921 l
h
-2364.2346 3911.1921 m
S
-2426.2346 3942.2134 m
-2401.2346 3942.2134 l
-2401.2346 3967.2134 l
-2426.2346 3967.2134 l
h
-2426.2346 3942.2134 m
S
-2395.2346 3942.2134 m
-2370.2346 3942.2134 l
-2370.2346 3967.2134 l
-2395.2346 3967.2134 l
h
-2395.2346 3942.2134 m
S
-2364.2346 3942.2134 m
-2339.2346 3942.2134 l
-2339.2346 3967.2134 l
-2364.2346 3967.2134 l
h
-2364.2346 3942.2134 m
S
[
4
4
] 0 d
0.0168042 0.198351 1 sc
-2430.3354 3877.9363 m
-2337.6772 3877.9363 l
-2337.6772 3970.3127 l
-2430.3354 3970.3127 l
h
-2430.3354 3877.9363 m
S
[] 0 d
0 0 0 sc
-2426.2346 3972.802 m
-2401.2346 3972.802 l
-2401.2346 3997.802 l
-2426.2346 3997.802 l
h
-2426.2346 3972.802 m
S
-2395.2346 3972.802 m
-2370.2346 3972.802 l
-2370.2346 3997.802 l
-2395.2346 3997.802 l
h
-2395.2346 3972.802 m
S
-2364.2346 3972.802 m
-2339.2346 3972.802 l
-2339.2346 3997.802 l
-2364.2346 3997.802 l
h
-2364.2346 3972.802 m
S
[
4
4
] 0 d
0 0.56031799 0 sc
-2430.3354 3908.5249 m
-2337.6772 3908.5249 l
-2337.6772 4000.9016 l
-2430.3354 4000.9016 l
h
-2430.3354 3908.5249 m
S
1.5 w
[
6
6
] 0 d
1 0.149131 0 sc
-2126.991 3884.8992 m
-2101.991 3884.8992 l
-2101.991 3909.8992 l
-2126.991 3909.8992 l
h
-2126.991 3884.8992 m
S
0.0168042 0.198351 1 sc
-2126.991 3915.9204 m
-2101.991 3915.9204 l
-2101.991 3940.9204 l
-2126.991 3940.9204 l
h
-2126.991 3915.9204 m
S
0 0.56031799 0 sc
-2126.991 3946.9417 m
-2101.991 3946.9417 l
-2101.991 3971.9417 l
-2126.991 3971.9417 l
h
-2126.991 3946.9417 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 16 0 0 -16 0 0]sf
-2402.0225 4019.802 m
(!"#$%)[ 5.664000 8.512000 8.400000 8.288000 0.000000 ] xS
-2138.387 4019.802 m
(&$%#$%)[ 12.480000 8.288000 5.168000 8.400000 8.288000 0.000000 ] xS
1 w
[] 0 d
0.60000002 i
/Cs2 SC
0 0 0 sc
-2268.5952 3884.4666 m
-2243.5952 3884.4666 l
-2243.5952 3909.4666 l
-2268.5952 3909.4666 l
h
-2268.5952 3884.4666 m
S
-2268.5952 3915.4878 m
-2243.5952 3915.4878 l
-2243.5952 3940.4878 l
-2268.5952 3940.4878 l
h
-2268.5952 3915.4878 m
S
-2268.5952 3946.509 m
-2243.5952 3946.509 l
-2243.5952 3971.509 l
-2268.5952 3971.509 l
h
-2268.5952 3946.509 m
S
-2238.9468 3884.4666 m
-2213.9468 3884.4666 l
-2213.9468 3909.4666 l
-2238.9468 3909.4666 l
h
-2238.9468 3884.4666 m
S
-2238.9468 3915.4878 m
-2213.9468 3915.4878 l
-2213.9468 3940.4878 l
-2238.9468 3940.4878 l
h
-2238.9468 3915.4878 m
S
-2238.9468 3946.509 m
-2213.9468 3946.509 l
-2213.9468 3971.509 l
-2238.9468 3971.509 l
h
-2238.9468 3946.509 m
S
-2209.2983 3884.4666 m
-2184.2983 3884.4666 l
-2184.2983 3909.4666 l
-2209.2983 3909.4666 l
h
-2209.2983 3884.4666 m
S
-2209.2983 3915.4878 m
-2184.2983 3915.4878 l
-2184.2983 3940.4878 l
-2209.2983 3940.4878 l
h
-2209.2983 3915.4878 m
S
-2209.2983 3946.509 m
-2184.2983 3946.509 l
-2184.2983 3971.509 l
-2209.2983 3971.509 l
h
-2209.2983 3946.509 m
S
/Cs1 SC
0 sc
0 i
-2244.2388 4019.802 m
('\(\)%*+)[ 9.056000 4.320000 4.352000 5.168000 6.896000 0.000000 ] xS
/F2.1[ 15 0 0 -15 0 0]sf
-2480.3831 3863.3311 m
(!"#)[ 5.280762 7.500000 0.000000 ] xS
-2457.5974 3869.3311 m
($%)[ 4.167480 0.000000 ] xS
-2480.3831 3925.3735 m
(!"#)[ 5.280762 7.500000 0.000000 ] xS
-2457.5974 3931.3735 m
($&)[ 4.167480 0.000000 ] xS
-2480.3831 3956.3948 m
(!"#)[ 5.280762 7.500000 0.000000 ] xS
-2457.5974 3962.3948 m
($')[ 4.167480 0.000000 ] xS
-2480.3831 3986.9834 m
(!"#)[ 5.280762 7.500000 0.000000 ] xS
-2457.5974 3992.9834 m
($\()[ 4.167480 0.000000 ] xS
-2480.3831 3893.875 m
(!"#)[ 5.280762 7.500000 0.000000 ] xS
-2457.5974 3899.875 m
($\))[ 4.167480 0.000000 ] xS
-2307.2256 3898.1709 m
(!"#)[ 5.280762 7.500000 0.000000 ] xS
-2284.4399 3904.1709 m
(*%)[ 4.167480 0.000000 ] xS
-2308.0483 3930.1018 m
(!"#)[ 5.280762 7.500000 0.000000 ] xS
-2285.2627 3936.1018 m
(*\))[ 4.167480 0.000000 ] xS
-2308.0483 3958.4561 m
(!"#)[ 5.280762 7.500000 0.000000 ] xS
-2285.2627 3964.4561 m
(*&)[ 4.167480 0.000000 ] xS
-2158.6584 3899.0806 m
("+,)[ 7.500000 7.500000 0.000000 ] xS
-2139.491 3905.0806 m
(%)s
-2158.6584 3932.0112 m
("+,)[ 7.500000 7.500000 0.000000 ] xS
-2139.491 3938.0112 m
(\))s
-2158.6584 3961.123 m
("+,)[ 7.500000 7.500000 0.000000 ] xS
-2139.491 3967.123 m
(&)s
/F1.1[ 16 0 0 -16 0 0]sf
-2141.571 3865.1497 m
(%,+*-./0)[ 5.168000 8.512000 5.792000 6.896000 8.064000 8.224000 4.000000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
